/* ========================================================================
 * Copyright (c) 2005-2019 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
 * ======================================================================*/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using Opc.Ua;
using Opc.Ua.Di;
using Opc.Ua.Robotics;

namespace Opc.Ua.Ff
{
    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Open Method.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Open = 18576;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Close Method.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Close = 18579;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Read Method.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Read = 18581;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Write Method.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Write = 18584;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition Method.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition = 18586;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition Method.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition = 18589;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_InitLock = 15027;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_RenewLock = 15030;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_ExitLock = 15032;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_BreakLock = 15034;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_InitLock = 15089;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_RenewLock = 15092;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_ExitLock = 15094;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_BreakLock = 15096;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_MethodSet_Start Method.
        /// </summary>
        public const uint CtrlConfigurationType_MethodSet_Start = 15110;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_MethodSet_Stop Method.
        /// </summary>
        public const uint CtrlConfigurationType_MethodSet_Stop = 15111;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlResourceType_Lock_InitLock = 15138;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlResourceType_Lock_RenewLock = 15141;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlResourceType_Lock_ExitLock = 15143;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlResourceType_Lock_BreakLock = 15145;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_InitLock = 15173;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_RenewLock = 15176;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_ExitLock = 15178;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_BreakLock = 15180;

        /// <summary>
        /// The identifier for the CtrlResourceType_MethodSet_Start Method.
        /// </summary>
        public const uint CtrlResourceType_MethodSet_Start = 15194;

        /// <summary>
        /// The identifier for the CtrlResourceType_MethodSet_Stop Method.
        /// </summary>
        public const uint CtrlResourceType_MethodSet_Stop = 15195;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_InitLock = 15220;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_RenewLock = 15223;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_ExitLock = 15225;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_BreakLock = 15227;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlProgramType_Lock_InitLock = 15249;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlProgramType_Lock_RenewLock = 15252;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlProgramType_Lock_ExitLock = 15254;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlProgramType_Lock_BreakLock = 15256;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_InitLock Method.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_InitLock = 15279;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_RenewLock Method.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_RenewLock = 15282;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_ExitLock Method.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_ExitLock = 15284;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_BreakLock Method.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_BreakLock = 15286;

        /// <summary>
        /// The identifier for the HC10_Lock_InitLock Method.
        /// </summary>
        public const uint HC10_Lock_InitLock = 18608;

        /// <summary>
        /// The identifier for the HC10_Lock_RenewLock Method.
        /// </summary>
        public const uint HC10_Lock_RenewLock = 18611;

        /// <summary>
        /// The identifier for the HC10_Lock_ExitLock Method.
        /// </summary>
        public const uint HC10_Lock_ExitLock = 18613;

        /// <summary>
        /// The identifier for the HC10_Lock_BreakLock Method.
        /// </summary>
        public const uint HC10_Lock_BreakLock = 18615;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_InitLock = 18647;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_RenewLock = 18650;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_ExitLock = 18652;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_BreakLock = 18654;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 18727;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 18730;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 18732;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 18734;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 18788;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 18791;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 18793;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 18795;

        /// <summary>
        /// The identifier for the GP8_Lock_InitLock Method.
        /// </summary>
        public const uint GP8_Lock_InitLock = 18824;

        /// <summary>
        /// The identifier for the GP8_Lock_RenewLock Method.
        /// </summary>
        public const uint GP8_Lock_RenewLock = 18827;

        /// <summary>
        /// The identifier for the GP8_Lock_ExitLock Method.
        /// </summary>
        public const uint GP8_Lock_ExitLock = 18829;

        /// <summary>
        /// The identifier for the GP8_Lock_BreakLock Method.
        /// </summary>
        public const uint GP8_Lock_BreakLock = 18831;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_InitLock = 18863;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_RenewLock = 18866;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_ExitLock = 18868;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_BreakLock = 18870;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 18943;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 18946;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 18948;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 18950;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 19004;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 19007;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 19009;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 19011;

        /// <summary>
        /// The identifier for the YRC1000_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_Lock_InitLock = 19040;

        /// <summary>
        /// The identifier for the YRC1000_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_Lock_RenewLock = 19043;

        /// <summary>
        /// The identifier for the YRC1000_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_Lock_ExitLock = 19045;

        /// <summary>
        /// The identifier for the YRC1000_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_Lock_BreakLock = 19047;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_InitLock = 19078;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_RenewLock = 19081;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_ExitLock = 19083;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_BreakLock = 19085;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_InitLock = 19113;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_RenewLock = 19116;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_ExitLock = 19118;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_BreakLock = 19120;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock = 19148;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock = 19151;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock = 19153;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock = 19155;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_InitLock = 19218;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_RenewLock = 19221;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_ExitLock = 19223;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_BreakLock = 19225;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_InitLock = 19264;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_RenewLock = 19267;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_ExitLock = 19269;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_BreakLock = 19271;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 19303;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 19306;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 19308;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 19310;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 19383;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 19386;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 19388;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 19390;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 19444;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 19447;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 19449;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 19451;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_Lock_InitLock = 19480;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_Lock_RenewLock = 19483;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_Lock_ExitLock = 19485;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_Lock_BreakLock = 19487;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_InitLock = 19518;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock = 19521;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock = 19523;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock = 19525;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock = 19553;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock = 19556;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock = 19558;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock = 19560;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock = 19588;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock = 19591;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock = 19593;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock = 19595;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_InitLock = 19658;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock = 19661;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock = 19663;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock = 19665;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_InitLock = 19704;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock = 19707;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock = 19709;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock = 19711;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 19743;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 19746;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 19748;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 19750;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 19823;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 19826;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 19828;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 19830;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 19884;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 19887;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 19889;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 19891;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_InitLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_InitLock = 19920;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_RenewLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_RenewLock = 19923;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_ExitLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_ExitLock = 19925;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_BreakLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_BreakLock = 19927;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_InitLock = 20836;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_RenewLock = 20839;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_ExitLock = 20841;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_BreakLock = 20843;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_InitLock Method.
        /// </summary>
        public const uint USC_PLC_Lock_InitLock = 27119;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_RenewLock Method.
        /// </summary>
        public const uint USC_PLC_Lock_RenewLock = 27122;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_ExitLock Method.
        /// </summary>
        public const uint USC_PLC_Lock_ExitLock = 27124;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_BreakLock Method.
        /// </summary>
        public const uint USC_PLC_Lock_BreakLock = 27126;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_InitLock = 15046;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_RenewLock = 15049;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_ExitLock = 15051;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_BreakLock = 15053;

        /// <summary>
        /// The identifier for the R01_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Lock_InitLock = 20871;

        /// <summary>
        /// The identifier for the R01_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Lock_RenewLock = 20874;

        /// <summary>
        /// The identifier for the R01_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Lock_ExitLock = 20876;

        /// <summary>
        /// The identifier for the R01_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Lock_BreakLock = 20878;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = 20907;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = 20910;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = 20912;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = 20914;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 20947;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 20950;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 20952;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 20954;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 21028;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 21031;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 21033;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 21035;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 21090;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 21093;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 21095;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 21097;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_InitLock = 21126;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_RenewLock = 21129;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_ExitLock = 21131;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_BreakLock = 21133;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = 21165;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = 21168;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = 21170;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = 21172;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = 21201;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = 21204;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = 21206;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = 21208;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = 21714;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = 21717;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = 21719;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = 21721;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock = 21786;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = 21789;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = 21791;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = 21793;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_InitLock = 21833;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_RenewLock = 21836;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_ExitLock = 21838;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_BreakLock = 21840;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock = 21873;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock = 21876;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock = 21878;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock = 21880;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 21954;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 21957;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 21959;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 21961;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 22016;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 22019;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 22021;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 22023;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_InitLock = 22051;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_RenewLock = 22054;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_ExitLock = 22056;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_BreakLock = 22058;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock = 22567;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock = 22570;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock = 22572;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock = 22574;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock = 22603;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock = 22606;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock = 22608;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock = 22610;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock = 22639;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock = 22642;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock = 22644;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock = 22646;

        /// <summary>
        /// The identifier for the R02_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Lock_InitLock = 22712;

        /// <summary>
        /// The identifier for the R02_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Lock_RenewLock = 22715;

        /// <summary>
        /// The identifier for the R02_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Lock_ExitLock = 22717;

        /// <summary>
        /// The identifier for the R02_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Lock_BreakLock = 22719;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = 22748;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = 22751;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = 22753;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = 22755;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 22788;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 22791;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 22793;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 22795;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 22869;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 22872;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 22874;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 22876;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 22931;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 22934;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 22936;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 22938;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_InitLock = 23444;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_RenewLock = 23447;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_ExitLock = 23449;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_BreakLock = 23451;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = 23483;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = 23486;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = 23488;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = 23490;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = 23519;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = 23522;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = 23524;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = 23526;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = 23555;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = 23558;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = 23560;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = 23562;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock = 23627;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = 23630;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = 23632;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = 23634;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_InitLock = 23674;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_RenewLock = 23677;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_ExitLock = 23679;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_BreakLock = 23681;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock = 23714;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock = 23717;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock = 23719;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock = 23721;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 23795;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 23798;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 23800;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 23802;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 24334;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 24337;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 24339;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 24341;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_InitLock = 24369;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_RenewLock = 24372;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_ExitLock = 24374;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_BreakLock = 24376;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock = 24408;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock = 24411;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock = 24413;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock = 24415;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock = 24444;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock = 24447;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock = 24449;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock = 24451;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock = 24480;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock = 24483;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock = 24485;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock = 24487;

        /// <summary>
        /// The identifier for the R03_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Lock_InitLock = 24553;

        /// <summary>
        /// The identifier for the R03_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Lock_RenewLock = 24556;

        /// <summary>
        /// The identifier for the R03_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Lock_ExitLock = 24558;

        /// <summary>
        /// The identifier for the R03_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Lock_BreakLock = 24560;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = 24589;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = 24592;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = 24594;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = 24596;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 24629;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 24632;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 24634;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 24636;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 25187;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 25190;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 25192;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 25194;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 25249;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 25252;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 25254;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 25256;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_InitLock = 25285;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_RenewLock = 25288;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_ExitLock = 25290;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_BreakLock = 25292;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = 25324;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = 25327;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = 25329;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = 25331;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = 25360;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = 25363;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = 25365;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = 25367;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = 25396;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = 25399;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = 25401;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = 25403;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock = 25468;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = 25471;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = 25473;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = 25475;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_InitLock = 25515;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_RenewLock = 25518;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_ExitLock = 25520;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_BreakLock = 25522;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock = 25555;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock = 25558;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock = 25560;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock = 25562;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 25636;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 25639;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 25641;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 25643;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 25698;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 25701;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 25703;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 25705;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_InitLock = 25733;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_RenewLock = 25736;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_ExitLock = 25738;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_BreakLock = 25740;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock = 25772;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock = 25775;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock = 25777;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock = 25779;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock = 25808;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock = 25811;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock = 25813;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock = 25815;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock = 25844;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock = 25847;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock = 25849;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock = 25851;

        /// <summary>
        /// The identifier for the R04_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Lock_InitLock = 25917;

        /// <summary>
        /// The identifier for the R04_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Lock_RenewLock = 25920;

        /// <summary>
        /// The identifier for the R04_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Lock_ExitLock = 25922;

        /// <summary>
        /// The identifier for the R04_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Lock_BreakLock = 25924;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = 25953;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = 25956;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = 25958;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = 25960;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 25993;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 25996;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 25998;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 26000;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 26074;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 26077;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 26079;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 26081;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 26136;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 26139;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 26141;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 26143;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_InitLock = 26172;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_RenewLock = 26175;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_ExitLock = 26177;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_BreakLock = 26179;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = 26211;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = 26214;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = 26216;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = 26218;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = 26247;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = 26250;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = 26252;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = 26254;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = 26283;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = 26286;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = 26288;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = 26290;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock = 26355;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = 26358;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = 26360;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = 26362;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_InitLock = 26402;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_RenewLock = 26405;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_ExitLock = 26407;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_BreakLock = 26409;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock = 26442;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock = 26445;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock = 26447;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock = 26449;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 26523;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 26526;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 26528;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 26530;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 26585;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 26588;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 26590;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 26592;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_InitLock = 26620;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_RenewLock = 26623;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_ExitLock = 26625;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_BreakLock = 26627;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock = 26659;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock = 26662;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock = 26664;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock = 26666;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock = 26695;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock = 26698;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock = 26700;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock = 26702;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock = 26731;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock = 26734;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock = 26736;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock = 27159;

        /// <summary>
        /// The identifier for the R05_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Lock_InitLock = 27228;

        /// <summary>
        /// The identifier for the R05_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Lock_RenewLock = 27231;

        /// <summary>
        /// The identifier for the R05_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Lock_ExitLock = 27233;

        /// <summary>
        /// The identifier for the R05_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Lock_BreakLock = 27235;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = 27264;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = 27267;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = 27269;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = 27271;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 27304;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 27307;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 27309;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 27311;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 27385;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 27388;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 27390;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 27392;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 27447;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 27450;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 27452;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 27454;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_InitLock = 27483;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_RenewLock = 27486;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_ExitLock = 27488;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_BreakLock = 27490;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = 27522;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = 27525;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = 27527;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = 27529;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = 27558;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = 27561;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = 27563;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = 27565;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = 27594;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = 27597;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = 27599;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = 27601;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock = 27726;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = 27729;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = 27731;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = 27733;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_InitLock = 27773;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_RenewLock = 27776;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_ExitLock = 27778;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_BreakLock = 27780;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock = 27813;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock = 27816;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock = 27818;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock = 27820;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 27894;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 27897;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 27899;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 27901;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 27956;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 27959;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 27961;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 27963;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_InitLock = 27991;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_RenewLock = 27994;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_ExitLock = 27996;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_BreakLock = 27998;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock = 28030;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock = 28033;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock = 28035;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock = 28037;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock = 28066;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock = 28069;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock = 28071;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock = 28073;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock = 28102;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock = 28105;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock = 28107;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock = 28109;

        /// <summary>
        /// The identifier for the Conveyors_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Lock_InitLock = 28175;

        /// <summary>
        /// The identifier for the Conveyors_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Lock_RenewLock = 28178;

        /// <summary>
        /// The identifier for the Conveyors_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Lock_ExitLock = 28180;

        /// <summary>
        /// The identifier for the Conveyors_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Lock_BreakLock = 28182;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = 28211;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = 28214;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = 28216;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = 28218;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = 28251;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = 28254;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = 28256;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = 28258;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 28332;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 28335;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 28337;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 28339;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 28394;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 28397;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 28399;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 28401;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_InitLock = 28430;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock = 28433;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock = 28435;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock = 28437;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = 28469;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = 28472;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = 28474;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = 28476;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = 28505;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = 28508;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = 28510;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = 28512;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = 28541;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = 28544;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = 28546;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = 28548;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock = 28613;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = 28616;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = 28618;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = 28620;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_InitLock = 28660;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock = 28663;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock = 28665;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock = 28667;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock = 28700;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock = 28703;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock = 28705;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock = 28707;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 28781;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 28784;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 28786;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 28788;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 28843;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 28846;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 28848;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 28850;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_InitLock = 28878;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock = 28881;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock = 28883;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock = 28885;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock = 28918;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock = 28921;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock = 28923;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock = 28925;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 28999;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 29002;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 29004;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 29006;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 29061;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 29064;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 29066;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 29068;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_InitLock = 29096;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock = 29099;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock = 29101;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock = 29103;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock = 29136;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock = 29139;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock = 29141;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock = 29143;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 29217;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 29220;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 29222;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 29224;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 29279;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 29282;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 29284;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 29286;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_InitLock = 29314;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock = 29317;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock = 29319;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock = 29321;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock = 29354;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock = 29357;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock = 29359;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock = 29361;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock = 29435;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = 29438;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = 29440;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = 29442;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = 29497;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = 29500;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = 29502;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = 29504;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_InitLock = 29532;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_RenewLock = 29535;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_ExitLock = 29537;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_BreakLock = 29539;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_InitLock = 29583;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_RenewLock = 29586;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_ExitLock = 29588;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_BreakLock = 29590;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_InitLock = 29634;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_RenewLock = 29637;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_ExitLock = 29639;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_BreakLock = 29641;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_InitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_InitLock = 29685;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_RenewLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_RenewLock = 29688;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_ExitLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_ExitLock = 29690;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_BreakLock Method.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_BreakLock = 29692;
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata Object.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata = 18562;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_MethodSet Object.
        /// </summary>
        public const uint CtrlConfigurationType_MethodSet = 15016;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_NetworkAddress = 15098;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Resources Object.
        /// </summary>
        public const uint CtrlConfigurationType_Resources = 15112;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Resources_SupportedTypes Object.
        /// </summary>
        public const uint CtrlConfigurationType_Resources_SupportedTypes = 15113;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_GlobalVars Object.
        /// </summary>
        public const uint CtrlConfigurationType_GlobalVars = 15114;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_AccessVars Object.
        /// </summary>
        public const uint CtrlConfigurationType_AccessVars = 15116;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_ConfigVars Object.
        /// </summary>
        public const uint CtrlConfigurationType_ConfigVars = 15118;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Configuration Object.
        /// </summary>
        public const uint CtrlConfigurationType_Configuration = 15120;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Diagnostic Object.
        /// </summary>
        public const uint CtrlConfigurationType_Diagnostic = 15122;

        /// <summary>
        /// The identifier for the CtrlResourceType_MethodSet Object.
        /// </summary>
        public const uint CtrlResourceType_MethodSet = 15127;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_NetworkAddress = 15182;

        /// <summary>
        /// The identifier for the CtrlResourceType_Tasks Object.
        /// </summary>
        public const uint CtrlResourceType_Tasks = 15196;

        /// <summary>
        /// The identifier for the CtrlResourceType_Tasks_SupportedTypes Object.
        /// </summary>
        public const uint CtrlResourceType_Tasks_SupportedTypes = 15197;

        /// <summary>
        /// The identifier for the CtrlResourceType_Programs Object.
        /// </summary>
        public const uint CtrlResourceType_Programs = 15198;

        /// <summary>
        /// The identifier for the CtrlResourceType_Programs_SupportedTypes Object.
        /// </summary>
        public const uint CtrlResourceType_Programs_SupportedTypes = 15199;

        /// <summary>
        /// The identifier for the CtrlResourceType_GlobalVars Object.
        /// </summary>
        public const uint CtrlResourceType_GlobalVars = 15200;

        /// <summary>
        /// The identifier for the CtrlResourceType_Configuration Object.
        /// </summary>
        public const uint CtrlResourceType_Configuration = 15202;

        /// <summary>
        /// The identifier for the CtrlResourceType_Diagnostic Object.
        /// </summary>
        public const uint CtrlResourceType_Diagnostic = 15204;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_ParameterSet = 18637;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_ParameterSet = 18853;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_ParameterSet = 19138;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ParameterSet = 19208;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_ParameterSet = 19254;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes = 19291;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 19293;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains = 19371;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet = 19578;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ParameterSet = 19648;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_ParameterSet = 19694;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes = 19731;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 19733;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains = 19811;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_NetworkAddress = 20845;

        /// <summary>
        /// The identifier for the USC_PLC Object.
        /// </summary>
        public const uint USC_PLC = 27106;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_NetworkAddress = 15055;

        /// <summary>
        /// The identifier for the USC_PLC_Resources Object.
        /// </summary>
        public const uint USC_PLC_Resources = 15302;

        /// <summary>
        /// The identifier for the USC_PLC_Resources_SupportedTypes Object.
        /// </summary>
        public const uint USC_PLC_Resources_SupportedTypes = 15303;

        /// <summary>
        /// The identifier for the USC_PLC_GlobalVars Object.
        /// </summary>
        public const uint USC_PLC_GlobalVars = 15304;

        /// <summary>
        /// The identifier for the USC_PLC_AccessVars Object.
        /// </summary>
        public const uint USC_PLC_AccessVars = 15306;

        /// <summary>
        /// The identifier for the USC_PLC_ConfigVars Object.
        /// </summary>
        public const uint USC_PLC_ConfigVars = 15308;

        /// <summary>
        /// The identifier for the USC_PLC_Configuration Object.
        /// </summary>
        public const uint USC_PLC_Configuration = 15310;

        /// <summary>
        /// The identifier for the USC_PLC_Diagnostic Object.
        /// </summary>
        public const uint USC_PLC_Diagnostic = 15312;

        /// <summary>
        /// The identifier for the R01 Object.
        /// </summary>
        public const uint R01 = 20857;

        /// <summary>
        /// The identifier for the R01_MotionDevices Object.
        /// </summary>
        public const uint R01_MotionDevices = 20894;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_ParameterSet = 20896;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes = 20934;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 20936;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains = 21015;

        /// <summary>
        /// The identifier for the R01_Controllers Object.
        /// </summary>
        public const uint R01_Controllers = 21113;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_CurrentUser = 21149;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software = 21188;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls = 21701;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = 21703;

        /// <summary>
        /// The identifier for the R01_SafetyStates Object.
        /// </summary>
        public const uint R01_SafetyStates = 21773;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ParameterSet = 21775;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01 Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01 = 21821;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_ParameterSet Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_ParameterSet = 21822;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes = 21860;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet = 21862;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains Object.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains = 21941;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01 Object.
        /// </summary>
        public const uint R01_Controllers_Controller_R01 = 22039;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_CurrentUser Object.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_CurrentUser = 22074;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software Object.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software = 22590;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls Object.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls = 22626;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet = 22628;

        /// <summary>
        /// The identifier for the R02 Object.
        /// </summary>
        public const uint R02 = 22698;

        /// <summary>
        /// The identifier for the R02_MotionDevices Object.
        /// </summary>
        public const uint R02_MotionDevices = 22735;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_ParameterSet = 22737;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes = 22775;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 22777;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains = 22856;

        /// <summary>
        /// The identifier for the R02_Controllers Object.
        /// </summary>
        public const uint R02_Controllers = 23431;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_CurrentUser = 23467;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software = 23506;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls = 23542;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = 23544;

        /// <summary>
        /// The identifier for the R02_SafetyStates Object.
        /// </summary>
        public const uint R02_SafetyStates = 23614;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ParameterSet = 23616;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02 Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02 = 23662;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_ParameterSet Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_ParameterSet = 23663;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes = 23701;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet = 23703;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains Object.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains = 23782;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02 Object.
        /// </summary>
        public const uint R02_Controllers_Controller_R02 = 24357;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_CurrentUser Object.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_CurrentUser = 24392;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software Object.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software = 24431;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls Object.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls = 24467;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet = 24469;

        /// <summary>
        /// The identifier for the R03 Object.
        /// </summary>
        public const uint R03 = 24539;

        /// <summary>
        /// The identifier for the R03_MotionDevices Object.
        /// </summary>
        public const uint R03_MotionDevices = 24576;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_ParameterSet = 24578;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes = 24616;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 24618;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains = 25174;

        /// <summary>
        /// The identifier for the R03_Controllers Object.
        /// </summary>
        public const uint R03_Controllers = 25272;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_CurrentUser = 25308;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software = 25347;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls = 25383;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = 25385;

        /// <summary>
        /// The identifier for the R03_SafetyStates Object.
        /// </summary>
        public const uint R03_SafetyStates = 25455;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ParameterSet = 25457;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03 Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03 = 25503;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_ParameterSet Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_ParameterSet = 25504;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes = 25542;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet = 25544;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains Object.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains = 25623;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03 Object.
        /// </summary>
        public const uint R03_Controllers_Controller_R03 = 25721;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_CurrentUser Object.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_CurrentUser = 25756;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software Object.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software = 25795;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls Object.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls = 25831;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet = 25833;

        /// <summary>
        /// The identifier for the R04 Object.
        /// </summary>
        public const uint R04 = 25903;

        /// <summary>
        /// The identifier for the R04_MotionDevices Object.
        /// </summary>
        public const uint R04_MotionDevices = 25940;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_ParameterSet = 25942;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes = 25980;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 25982;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains = 26061;

        /// <summary>
        /// The identifier for the R04_Controllers Object.
        /// </summary>
        public const uint R04_Controllers = 26159;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_CurrentUser = 26195;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software = 26234;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls = 26270;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = 26272;

        /// <summary>
        /// The identifier for the R04_SafetyStates Object.
        /// </summary>
        public const uint R04_SafetyStates = 26342;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ParameterSet = 26344;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04 Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04 = 26390;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_ParameterSet Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_ParameterSet = 26391;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes = 26429;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet = 26431;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains Object.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains = 26510;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04 Object.
        /// </summary>
        public const uint R04_Controllers_Controller_R04 = 26608;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_CurrentUser Object.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_CurrentUser = 26643;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software Object.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software = 26682;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls Object.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls = 26718;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet = 26720;

        /// <summary>
        /// The identifier for the R05 Object.
        /// </summary>
        public const uint R05 = 27214;

        /// <summary>
        /// The identifier for the R05_MotionDevices Object.
        /// </summary>
        public const uint R05_MotionDevices = 27251;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_ParameterSet = 27253;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes = 27291;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 27293;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains = 27372;

        /// <summary>
        /// The identifier for the R05_Controllers Object.
        /// </summary>
        public const uint R05_Controllers = 27470;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_CurrentUser = 27506;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software = 27545;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls = 27581;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = 27583;

        /// <summary>
        /// The identifier for the R05_SafetyStates Object.
        /// </summary>
        public const uint R05_SafetyStates = 27713;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ParameterSet = 27715;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05 Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05 = 27761;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_ParameterSet Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_ParameterSet = 27762;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes = 27800;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet = 27802;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains Object.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains = 27881;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05 Object.
        /// </summary>
        public const uint R05_Controllers_Controller_R05 = 27979;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_CurrentUser Object.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_CurrentUser = 28014;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software Object.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software = 28053;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls Object.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls = 28089;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet = 28091;

        /// <summary>
        /// The identifier for the Conveyors Object.
        /// </summary>
        public const uint Conveyors = 28161;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices Object.
        /// </summary>
        public const uint Conveyors_MotionDevices = 28198;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet = 28200;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes = 28238;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = 28240;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains = 28319;

        /// <summary>
        /// The identifier for the Conveyors_Controllers Object.
        /// </summary>
        public const uint Conveyors_Controllers = 28417;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_CurrentUser = 28453;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software = 28492;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls = 28528;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = 28530;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates Object.
        /// </summary>
        public const uint Conveyors_SafetyStates = 28600;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet = 28602;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1 Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1 = 28648;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_ParameterSet = 28649;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes = 28687;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet = 28689;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains = 28768;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2 Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2 = 28866;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_ParameterSet = 28867;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes = 28905;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet = 28907;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains = 28986;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3 Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3 = 29084;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_ParameterSet = 29085;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes = 29123;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet = 29125;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains = 29204;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4 Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4 = 29302;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_ParameterSet = 29303;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes = 29341;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet = 29343;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains Object.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains = 29422;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1 Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1 = 29520;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_ParameterSet = 29521;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2 Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2 = 29571;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_ParameterSet = 29572;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3 Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3 = 29622;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_ParameterSet = 29623;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4 Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4 = 29673;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ParameterSet Object.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_ParameterSet = 29674;
    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the CtrlConfigurationType ObjectType.
        /// </summary>
        public const uint CtrlConfigurationType = 15013;

        /// <summary>
        /// The identifier for the CtrlResourceType ObjectType.
        /// </summary>
        public const uint CtrlResourceType = 15124;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType ObjectType.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType = 15206;

        /// <summary>
        /// The identifier for the CtrlProgramType ObjectType.
        /// </summary>
        public const uint CtrlProgramType = 15235;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType ObjectType.
        /// </summary>
        public const uint CtrlFunctionBlockType = 15265;

        /// <summary>
        /// The identifier for the CtrlTaskType ObjectType.
        /// </summary>
        public const uint CtrlTaskType = 15295;

        /// <summary>
        /// The identifier for the SFCType ObjectType.
        /// </summary>
        public const uint SFCType = 15299;

        /// <summary>
        /// The identifier for the HC10 ObjectType.
        /// </summary>
        public const uint HC10 = 18595;

        /// <summary>
        /// The identifier for the GP8 ObjectType.
        /// </summary>
        public const uint GP8 = 18811;

        /// <summary>
        /// The identifier for the YRC1000 ObjectType.
        /// </summary>
        public const uint YRC1000 = 19027;

        /// <summary>
        /// The identifier for the YRC1000mini ObjectType.
        /// </summary>
        public const uint YRC1000mini = 19467;

        /// <summary>
        /// The identifier for the SINAMICS_G120C ObjectType.
        /// </summary>
        public const uint SINAMICS_G120C = 19907;
    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the HasInputVars ReferenceType.
        /// </summary>
        public const uint HasInputVars = 15007;

        /// <summary>
        /// The identifier for the HasOutputVars ReferenceType.
        /// </summary>
        public const uint HasOutputVars = 15008;

        /// <summary>
        /// The identifier for the HasInOutVars ReferenceType.
        /// </summary>
        public const uint HasInOutVars = 15009;

        /// <summary>
        /// The identifier for the HasLocalVars ReferenceType.
        /// </summary>
        public const uint HasLocalVars = 15010;

        /// <summary>
        /// The identifier for the HasExternalVars ReferenceType.
        /// </summary>
        public const uint HasExternalVars = 15011;

        /// <summary>
        /// The identifier for the With ReferenceType.
        /// </summary>
        public const uint With = 15012;
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceUri Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceUri = 18563;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceVersion Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceVersion = 18564;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespacePublicationDate Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespacePublicationDate = 18565;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_IsNamespaceSubset Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_IsNamespaceSubset = 18566;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_StaticNodeIdTypes Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_StaticNodeIdTypes = 18567;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_StaticNumericNodeIdRange Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_StaticNumericNodeIdRange = 18568;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_StaticStringNodeIdPattern Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_StaticStringNodeIdPattern = 18569;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Size Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Size = 18571;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Writable Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Writable = 18572;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_UserWritable Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_UserWritable = 18573;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_OpenCount Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_OpenCount = 18574;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_InputArguments = 18577;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_OutputArguments = 18578;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Close_InputArguments = 18580;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_InputArguments = 18582;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_OutputArguments = 18583;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_Write_InputArguments = 18585;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_InputArguments = 18587;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_OutputArguments = 18588;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition_InputArguments = 18590;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_DefaultRolePermissions Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_DefaultRolePermissions = 18592;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_DefaultUserRolePermissions Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_DefaultUserRolePermissions = 18593;

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_DefaultAccessRestrictions Variable.
        /// </summary>
        public const uint OPCUAConneXtNamespaceMetadata_DefaultAccessRestrictions = 18594;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_Locked = 15023;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_LockingClient = 15024;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_LockingUser = 15025;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_RemainingLockTime = 15026;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_InitLock_InputArguments = 15028;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_InitLock_OutputArguments = 15029;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_RenewLock_OutputArguments = 15031;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_ExitLock_OutputArguments = 15033;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_Lock_BreakLock_OutputArguments = 15035;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_Locked = 15085;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_LockingClient = 15086;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_LockingUser = 15087;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_RemainingLockTime = 15088;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_InitLock_InputArguments = 15090;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_InitLock_OutputArguments = 15091;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_RenewLock_OutputArguments = 15093;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_ExitLock_OutputArguments = 15095;

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlConfigurationType_CPIdentifier_Lock_BreakLock_OutputArguments = 15097;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_Locked = 15134;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_LockingClient = 15135;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_LockingUser = 15136;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_RemainingLockTime = 15137;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_InitLock_InputArguments = 15139;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_InitLock_OutputArguments = 15140;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_RenewLock_OutputArguments = 15142;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_ExitLock_OutputArguments = 15144;

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_Lock_BreakLock_OutputArguments = 15146;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_Locked = 15169;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_LockingClient = 15170;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_LockingUser = 15171;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_RemainingLockTime = 15172;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_InitLock_InputArguments = 15174;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_InitLock_OutputArguments = 15175;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_RenewLock_OutputArguments = 15177;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_ExitLock_OutputArguments = 15179;

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlResourceType_CPIdentifier_Lock_BreakLock_OutputArguments = 15181;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_Locked = 15216;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_LockingClient = 15217;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_LockingUser = 15218;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_RemainingLockTime = 15219;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_InitLock_InputArguments = 15221;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_InitLock_OutputArguments = 15222;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_RenewLock_OutputArguments = 15224;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_ExitLock_OutputArguments = 15226;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Lock_BreakLock_OutputArguments = 15228;

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Body Variable.
        /// </summary>
        public const uint CtrlProgramOrganizationUnitType_Body = 15234;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_Locked = 15245;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_LockingClient = 15246;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_LockingUser = 15247;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_RemainingLockTime = 15248;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_InitLock_InputArguments = 15250;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_InitLock_OutputArguments = 15251;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_RenewLock_OutputArguments = 15253;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_ExitLock_OutputArguments = 15255;

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlProgramType_Lock_BreakLock_OutputArguments = 15257;

        /// <summary>
        /// The identifier for the CtrlProgramType_Program Variable.
        /// </summary>
        public const uint CtrlProgramType_Program = 15264;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_Locked Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_Locked = 15275;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_LockingClient Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_LockingClient = 15276;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_LockingUser Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_LockingUser = 15277;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_RemainingLockTime = 15278;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_InitLock_InputArguments = 15280;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_InitLock_OutputArguments = 15281;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_RenewLock_OutputArguments = 15283;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_ExitLock_OutputArguments = 15285;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_Lock_BreakLock_OutputArguments = 15287;

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_FunctionBlock Variable.
        /// </summary>
        public const uint CtrlFunctionBlockType_FunctionBlock = 15294;

        /// <summary>
        /// The identifier for the CtrlTaskType_Priority Variable.
        /// </summary>
        public const uint CtrlTaskType_Priority = 15296;

        /// <summary>
        /// The identifier for the CtrlTaskType_Interval Variable.
        /// </summary>
        public const uint CtrlTaskType_Interval = 15297;

        /// <summary>
        /// The identifier for the CtrlTaskType_Single Variable.
        /// </summary>
        public const uint CtrlTaskType_Single = 15298;

        /// <summary>
        /// The identifier for the HC10_Lock_Locked Variable.
        /// </summary>
        public const uint HC10_Lock_Locked = 18604;

        /// <summary>
        /// The identifier for the HC10_Lock_LockingClient Variable.
        /// </summary>
        public const uint HC10_Lock_LockingClient = 18605;

        /// <summary>
        /// The identifier for the HC10_Lock_LockingUser Variable.
        /// </summary>
        public const uint HC10_Lock_LockingUser = 18606;

        /// <summary>
        /// The identifier for the HC10_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint HC10_Lock_RemainingLockTime = 18607;

        /// <summary>
        /// The identifier for the HC10_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint HC10_Lock_InitLock_InputArguments = 18609;

        /// <summary>
        /// The identifier for the HC10_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Lock_InitLock_OutputArguments = 18610;

        /// <summary>
        /// The identifier for the HC10_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Lock_RenewLock_OutputArguments = 18612;

        /// <summary>
        /// The identifier for the HC10_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Lock_ExitLock_OutputArguments = 18614;

        /// <summary>
        /// The identifier for the HC10_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Lock_BreakLock_OutputArguments = 18616;

        /// <summary>
        /// The identifier for the HC10_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint HC10_ParameterSet_SpeedOverride = 18634;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_Locked = 18643;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_LockingClient = 18644;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_LockingUser = 18645;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_RemainingLockTime = 18646;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 18648;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 18649;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 18651;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 18653;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 18655;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_MotionProfile = 18670;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_Mass = 18672;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 18677;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 18679;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 18681;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 18686;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 18687;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 18688;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 18689;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 18690;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 18691;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 18694;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 18695;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 18696;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition = 18697;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 18702;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 18708;

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint HC10_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 18714;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_Locked = 18723;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 18724;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 18725;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 18726;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 18728;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 18729;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 18731;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 18733;

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 18735;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_Mass = 18751;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_Mass_EngineeringUnits = 18756;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_CartesianCoordinates = 18758;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_Orientation = 18760;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 18765;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 18766;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 18767;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_Orientation_A = 18768;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_Orientation_B = 18769;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_CenterOfMass_Orientation_C = 18770;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_Inertia_X = 18773;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_Inertia_Y = 18774;

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint HC10_FlangeLoad_Inertia_Z = 18775;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 18784;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 18785;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 18786;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 18787;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 18789;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 18790;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 18792;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 18794;

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 18796;

        /// <summary>
        /// The identifier for the GP8_Lock_Locked Variable.
        /// </summary>
        public const uint GP8_Lock_Locked = 18820;

        /// <summary>
        /// The identifier for the GP8_Lock_LockingClient Variable.
        /// </summary>
        public const uint GP8_Lock_LockingClient = 18821;

        /// <summary>
        /// The identifier for the GP8_Lock_LockingUser Variable.
        /// </summary>
        public const uint GP8_Lock_LockingUser = 18822;

        /// <summary>
        /// The identifier for the GP8_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint GP8_Lock_RemainingLockTime = 18823;

        /// <summary>
        /// The identifier for the GP8_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint GP8_Lock_InitLock_InputArguments = 18825;

        /// <summary>
        /// The identifier for the GP8_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Lock_InitLock_OutputArguments = 18826;

        /// <summary>
        /// The identifier for the GP8_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Lock_RenewLock_OutputArguments = 18828;

        /// <summary>
        /// The identifier for the GP8_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Lock_ExitLock_OutputArguments = 18830;

        /// <summary>
        /// The identifier for the GP8_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Lock_BreakLock_OutputArguments = 18832;

        /// <summary>
        /// The identifier for the GP8_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint GP8_ParameterSet_SpeedOverride = 18850;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_Locked = 18859;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_LockingClient = 18860;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_LockingUser = 18861;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_RemainingLockTime = 18862;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 18864;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 18865;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 18867;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 18869;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 18871;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_MotionProfile = 18886;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_Mass = 18888;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 18893;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 18895;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 18897;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 18902;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 18903;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 18904;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 18905;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 18906;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 18907;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 18910;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 18911;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 18912;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition = 18913;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 18918;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 18924;

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint GP8_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 18930;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_Locked = 18939;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 18940;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 18941;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 18942;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 18944;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 18945;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 18947;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 18949;

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 18951;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_Mass = 18967;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_Mass_EngineeringUnits = 18972;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_CartesianCoordinates = 18974;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_Orientation = 18976;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 18981;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 18982;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 18983;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_Orientation_A = 18984;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_Orientation_B = 18985;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_CenterOfMass_Orientation_C = 18986;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_Inertia_X = 18989;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_Inertia_Y = 18990;

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint GP8_FlangeLoad_Inertia_Z = 18991;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 19000;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 19001;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 19002;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 19003;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 19005;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 19006;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 19008;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 19010;

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 19012;

        /// <summary>
        /// The identifier for the YRC1000_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_Lock_Locked = 19036;

        /// <summary>
        /// The identifier for the YRC1000_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_Lock_LockingClient = 19037;

        /// <summary>
        /// The identifier for the YRC1000_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_Lock_LockingUser = 19038;

        /// <summary>
        /// The identifier for the YRC1000_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_Lock_RemainingLockTime = 19039;

        /// <summary>
        /// The identifier for the YRC1000_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_Lock_InitLock_InputArguments = 19041;

        /// <summary>
        /// The identifier for the YRC1000_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Lock_InitLock_OutputArguments = 19042;

        /// <summary>
        /// The identifier for the YRC1000_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Lock_RenewLock_OutputArguments = 19044;

        /// <summary>
        /// The identifier for the YRC1000_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Lock_ExitLock_OutputArguments = 19046;

        /// <summary>
        /// The identifier for the YRC1000_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Lock_BreakLock_OutputArguments = 19048;

        /// <summary>
        /// The identifier for the YRC1000_CurrentUser_Level Variable.
        /// </summary>
        public const uint YRC1000_CurrentUser_Level = 19064;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_Locked = 19074;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_LockingClient = 19075;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_LockingUser = 19076;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_RemainingLockTime = 19077;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 19079;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 19080;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 19082;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 19084;

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 19086;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_Locked = 19109;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_LockingClient = 19110;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_LockingUser = 19111;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_RemainingLockTime = 19112;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 19114;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 19115;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 19117;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 19119;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 19121;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Manufacturer = 19122;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_Model = 19124;

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint YRC1000_Software_SoftwareIdentifier_SoftwareRevision = 19126;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_Locked = 19144;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingClient = 19145;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingUser = 19146;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 19147;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 19149;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 19150;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 19152;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 19154;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 19156;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_ComponentName = 19170;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 19171;

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 19172;

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 19182;

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_ParameterSet_CabinetFanSpeed_EngineeringUnits = 19188;

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_ParameterSet_CPUFanSpeed_EngineeringUnits = 19194;

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_ParameterSet_InputVoltage_EngineeringUnits = 19200;

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_ParameterSet_Temperature_EngineeringUnits = 19206;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_Locked = 19214;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_LockingClient = 19215;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_LockingUser = 19216;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_RemainingLockTime = 19217;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_InitLock_InputArguments = 19219;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_InitLock_OutputArguments = 19220;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments = 19222;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments = 19224;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments = 19226;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 19243;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 19244;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 19247;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 19248;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 19249;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ParameterSet_OperationalMode = 19250;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ParameterSet_EmergencyStop = 19251;

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint YRC1000_SafetyStatesIdentifier_ParameterSet_ProtectiveStop = 19252;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_Locked = 19260;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_LockingClient = 19261;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_LockingUser = 19262;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_RemainingLockTime = 19263;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 19265;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 19266;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 19268;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 19270;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 19272;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Manufacturer = 19273;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Model = 19275;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_ProductCode = 19279;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_SerialNumber = 19282;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_MotionDeviceCategory = 19287;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 19290;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 19299;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 19300;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 19301;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 19302;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 19304;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 19305;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 19307;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 19309;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 19311;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 19326;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 19328;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 19333;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 19335;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 19337;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 19342;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 19343;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 19344;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 19345;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 19346;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 19347;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 19350;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 19351;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 19352;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 19353;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 19358;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 19364;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 19370;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 19379;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 19380;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 19381;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 19382;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 19384;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 19385;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 19387;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 19389;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 19391;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass = 19407;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 19412;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 19414;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 19416;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 19421;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 19422;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 19423;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 19424;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 19425;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 19426;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 19429;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 19430;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 19431;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 19440;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 19441;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 19442;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 19443;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 19445;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 19446;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 19448;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 19450;

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 19452;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_Locked = 19476;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_LockingClient = 19477;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_LockingUser = 19478;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_RemainingLockTime = 19479;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_InitLock_InputArguments = 19481;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_InitLock_OutputArguments = 19482;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_RenewLock_OutputArguments = 19484;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_ExitLock_OutputArguments = 19486;

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Lock_BreakLock_OutputArguments = 19488;

        /// <summary>
        /// The identifier for the YRC1000mini_CurrentUser_Level Variable.
        /// </summary>
        public const uint YRC1000mini_CurrentUser_Level = 19504;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_Locked = 19514;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_LockingClient = 19515;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_LockingUser = 19516;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_RemainingLockTime = 19517;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 19519;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 19520;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 19522;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 19524;

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 19526;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_Locked = 19549;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_LockingClient = 19550;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_LockingUser = 19551;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_RemainingLockTime = 19552;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 19554;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 19555;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 19557;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 19559;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 19561;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Manufacturer = 19562;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_Model = 19564;

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint YRC1000mini_Software_SoftwareIdentifier_SoftwareRevision = 19566;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_Locked = 19584;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingClient = 19585;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingUser = 19586;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 19587;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 19589;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 19590;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 19592;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 19594;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 19596;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_ComponentName = 19610;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 19611;

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 19612;

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 19622;

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_ParameterSet_CabinetFanSpeed_EngineeringUnits = 19628;

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_ParameterSet_CPUFanSpeed_EngineeringUnits = 19634;

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_ParameterSet_InputVoltage_EngineeringUnits = 19640;

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_ParameterSet_Temperature_EngineeringUnits = 19646;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_Locked = 19654;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_LockingClient = 19655;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_LockingUser = 19656;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_RemainingLockTime = 19657;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_InputArguments = 19659;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_OutputArguments = 19660;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments = 19662;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments = 19664;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments = 19666;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 19683;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 19684;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 19687;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 19688;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 19689;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ParameterSet_OperationalMode = 19690;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ParameterSet_EmergencyStop = 19691;

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint YRC1000mini_SafetyStatesIdentifier_ParameterSet_ProtectiveStop = 19692;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_Locked = 19700;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_LockingClient = 19701;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_LockingUser = 19702;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_RemainingLockTime = 19703;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 19705;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 19706;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 19708;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 19710;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 19712;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Manufacturer = 19713;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Model = 19715;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_ProductCode = 19719;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_SerialNumber = 19722;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_MotionDeviceCategory = 19727;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 19730;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 19739;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 19740;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 19741;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 19742;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 19744;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 19745;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 19747;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 19749;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 19751;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 19766;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 19768;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 19773;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 19775;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 19777;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 19782;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 19783;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 19784;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 19785;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 19786;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 19787;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 19790;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 19791;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 19792;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 19793;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 19798;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 19804;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 19810;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 19819;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 19820;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 19821;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 19822;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 19824;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 19825;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 19827;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 19829;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 19831;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass = 19847;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 19852;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 19854;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 19856;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 19861;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 19862;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 19863;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 19864;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 19865;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 19866;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 19869;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 19870;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 19871;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 19880;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 19881;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 19882;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 19883;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 19885;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 19886;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 19888;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 19890;

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 19892;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_Locked Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_Locked = 19916;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_LockingClient Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_LockingClient = 19917;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_LockingUser Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_LockingUser = 19918;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_RemainingLockTime = 19919;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_InitLock_InputArguments = 19921;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_InitLock_OutputArguments = 19922;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_RenewLock_OutputArguments = 19924;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_ExitLock_OutputArguments = 19926;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_Lock_BreakLock_OutputArguments = 19928;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_Locked = 20832;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_LockingClient = 20833;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_LockingUser = 20834;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_RemainingLockTime = 20835;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_InitLock_InputArguments = 20837;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_InitLock_OutputArguments = 20838;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_RenewLock_OutputArguments = 20840;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_ExitLock_OutputArguments = 20842;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint SINAMICS_G120C_CPIdentifier_Lock_BreakLock_OutputArguments = 20844;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_ParameterSet_Temperature Variable.
        /// </summary>
        public const uint SINAMICS_G120C_ParameterSet_Temperature = 15314;

        /// <summary>
        /// The identifier for the SINAMICS_G120C_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint SINAMICS_G120C_ParameterSet_Temperature_EngineeringUnits = 15319;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_Locked Variable.
        /// </summary>
        public const uint USC_PLC_Lock_Locked = 27115;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_LockingClient Variable.
        /// </summary>
        public const uint USC_PLC_Lock_LockingClient = 27116;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_LockingUser Variable.
        /// </summary>
        public const uint USC_PLC_Lock_LockingUser = 27117;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint USC_PLC_Lock_RemainingLockTime = 27118;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint USC_PLC_Lock_InitLock_InputArguments = 27120;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_Lock_InitLock_OutputArguments = 27121;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_Lock_RenewLock_OutputArguments = 27123;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_Lock_ExitLock_OutputArguments = 27125;

        /// <summary>
        /// The identifier for the USC_PLC_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_Lock_BreakLock_OutputArguments = 27127;

        /// <summary>
        /// The identifier for the USC_PLC_Manufacturer Variable.
        /// </summary>
        public const uint USC_PLC_Manufacturer = 27128;

        /// <summary>
        /// The identifier for the USC_PLC_Model Variable.
        /// </summary>
        public const uint USC_PLC_Model = 27130;

        /// <summary>
        /// The identifier for the USC_PLC_HardwareRevision Variable.
        /// </summary>
        public const uint USC_PLC_HardwareRevision = 27131;

        /// <summary>
        /// The identifier for the USC_PLC_SoftwareRevision Variable.
        /// </summary>
        public const uint USC_PLC_SoftwareRevision = 27132;

        /// <summary>
        /// The identifier for the USC_PLC_DeviceRevision Variable.
        /// </summary>
        public const uint USC_PLC_DeviceRevision = 27133;

        /// <summary>
        /// The identifier for the USC_PLC_DeviceManual Variable.
        /// </summary>
        public const uint USC_PLC_DeviceManual = 27135;

        /// <summary>
        /// The identifier for the USC_PLC_SerialNumber Variable.
        /// </summary>
        public const uint USC_PLC_SerialNumber = 27137;

        /// <summary>
        /// The identifier for the USC_PLC_RevisionCounter Variable.
        /// </summary>
        public const uint USC_PLC_RevisionCounter = 27139;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_Locked = 15042;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_LockingClient = 15043;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_LockingUser = 15044;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_RemainingLockTime = 15045;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_InitLock_InputArguments = 15047;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_InitLock_OutputArguments = 15048;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_RenewLock_OutputArguments = 15050;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_ExitLock_OutputArguments = 15052;

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint USC_PLC_CPIdentifier_Lock_BreakLock_OutputArguments = 15054;

        /// <summary>
        /// The identifier for the R01_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Lock_Locked = 20867;

        /// <summary>
        /// The identifier for the R01_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Lock_LockingClient = 20868;

        /// <summary>
        /// The identifier for the R01_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Lock_LockingUser = 20869;

        /// <summary>
        /// The identifier for the R01_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Lock_RemainingLockTime = 20870;

        /// <summary>
        /// The identifier for the R01_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Lock_InitLock_InputArguments = 20872;

        /// <summary>
        /// The identifier for the R01_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Lock_InitLock_OutputArguments = 20873;

        /// <summary>
        /// The identifier for the R01_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Lock_RenewLock_OutputArguments = 20875;

        /// <summary>
        /// The identifier for the R01_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Lock_ExitLock_OutputArguments = 20877;

        /// <summary>
        /// The identifier for the R01_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Lock_BreakLock_OutputArguments = 20879;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_Locked = 20903;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = 20904;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = 20905;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = 20906;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 20908;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 20909;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 20911;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 20913;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 20915;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Manufacturer = 20916;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Model = 20918;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_ProductCode = 20922;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_SerialNumber = 20925;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = 20930;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 20933;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 20943;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 20944;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 20945;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 20946;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 20948;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 20949;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 20951;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 20953;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 20955;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 20970;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 20972;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 20977;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 20979;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 20981;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 20986;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 20987;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 20988;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 20989;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 20990;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 20991;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 20994;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 20995;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 20996;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 20997;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 21002;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 21008;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 21014;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 21024;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 21025;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 21026;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 21027;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 21029;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 21030;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 21032;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 21034;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 21036;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = 21052;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 21057;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 21059;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 21061;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 21066;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 21067;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 21068;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 21069;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 21070;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 21071;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 21074;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 21075;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 21076;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 21086;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 21087;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 21088;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 21089;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 21091;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 21092;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 21094;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 21096;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 21098;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_Locked = 21122;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_LockingClient = 21123;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_LockingUser = 21124;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_RemainingLockTime = 21125;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = 21127;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = 21128;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = 21130;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = 21132;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = 21134;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Manufacturer = 21135;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Model = 21137;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_ProductCode = 21141;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_SerialNumber = 21144;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_CurrentUser_Level = 21150;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = 21161;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = 21162;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = 21163;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = 21164;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 21166;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 21167;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 21169;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 21171;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 21173;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = 21197;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = 21198;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = 21199;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = 21200;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 21202;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 21203;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 21205;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 21207;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 21209;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = 21210;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = 21212;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = 21214;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = 21710;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = 21711;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = 21712;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 21713;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 21715;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 21716;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 21718;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 21720;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 21722;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = 21736;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 21737;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 21738;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 21748;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = 21754;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = 21760;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = 21766;

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = 21772;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_Locked = 21782;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = 21783;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = 21784;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = 21785;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = 21787;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = 21788;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = 21790;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = 21792;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = 21794;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 21811;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 21812;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 21815;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 21816;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 21817;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = 21818;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = 21819;

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint R01_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = 21820;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_Locked = 21829;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_LockingClient = 21830;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_LockingUser = 21831;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_RemainingLockTime = 21832;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_InitLock_InputArguments = 21834;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_InitLock_OutputArguments = 21835;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_RenewLock_OutputArguments = 21837;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_ExitLock_OutputArguments = 21839;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Lock_BreakLock_OutputArguments = 21841;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Manufacturer Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Manufacturer = 21842;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Model Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Model = 21844;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_ProductCode Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_ProductCode = 21848;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_SerialNumber Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_SerialNumber = 21851;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_MotionDeviceCategory = 21856;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_ParameterSet_SpeedOverride = 21859;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_Locked = 21869;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingClient = 21870;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingUser = 21871;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RemainingLockTime = 21872;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 21874;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 21875;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 21877;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 21879;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 21881;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_MotionProfile = 21896;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass = 21898;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 21903;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 21905;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 21907;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 21912;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 21913;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 21914;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 21915;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 21916;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 21917;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 21920;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 21921;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 21922;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition = 21923;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 21928;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 21934;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 21940;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_Locked = 21950;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 21951;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 21952;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 21953;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 21955;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 21956;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 21958;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 21960;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 21962;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass = 21978;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass_EngineeringUnits = 21983;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates = 21985;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation = 21987;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 21992;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 21993;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 21994;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_A = 21995;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_B = 21996;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_C = 21997;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_X = 22000;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Y = 22001;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Z = 22002;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 22012;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 22013;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 22014;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 22015;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 22017;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 22018;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 22020;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 22022;

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 22024;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_Locked = 22047;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_LockingClient = 22048;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_LockingUser = 22049;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_RemainingLockTime = 22050;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_InitLock_InputArguments = 22052;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_InitLock_OutputArguments = 22053;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_RenewLock_OutputArguments = 22055;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_ExitLock_OutputArguments = 22057;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Lock_BreakLock_OutputArguments = 22059;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Manufacturer Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Manufacturer = 22060;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Model Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Model = 22062;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ProductCode Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_ProductCode = 22066;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_SerialNumber Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_SerialNumber = 22069;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_CurrentUser_Level Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_CurrentUser_Level = 22075;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_Locked = 22563;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingClient = 22564;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingUser = 22565;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RemainingLockTime = 22566;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 22568;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 22569;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 22571;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 22573;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 22575;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_Locked = 22599;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingClient = 22600;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingUser = 22601;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RemainingLockTime = 22602;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 22604;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 22605;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 22607;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 22609;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 22611;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Manufacturer = 22612;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Model = 22614;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_Software_SoftwareIdentifier_SoftwareRevision = 22616;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_Locked = 22635;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingClient = 22636;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingUser = 22637;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 22638;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 22640;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 22641;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 22643;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 22645;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 22647;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ComponentName = 22661;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 22662;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 22663;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 22673;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_ParameterSet_CabinetFanSpeed_EngineeringUnits = 22679;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_ParameterSet_CPUFanSpeed_EngineeringUnits = 22685;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_ParameterSet_InputVoltage_EngineeringUnits = 22691;

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R01_Controllers_Controller_R01_ParameterSet_Temperature_EngineeringUnits = 22697;

        /// <summary>
        /// The identifier for the R02_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Lock_Locked = 22708;

        /// <summary>
        /// The identifier for the R02_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Lock_LockingClient = 22709;

        /// <summary>
        /// The identifier for the R02_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Lock_LockingUser = 22710;

        /// <summary>
        /// The identifier for the R02_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Lock_RemainingLockTime = 22711;

        /// <summary>
        /// The identifier for the R02_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Lock_InitLock_InputArguments = 22713;

        /// <summary>
        /// The identifier for the R02_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Lock_InitLock_OutputArguments = 22714;

        /// <summary>
        /// The identifier for the R02_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Lock_RenewLock_OutputArguments = 22716;

        /// <summary>
        /// The identifier for the R02_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Lock_ExitLock_OutputArguments = 22718;

        /// <summary>
        /// The identifier for the R02_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Lock_BreakLock_OutputArguments = 22720;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_Locked = 22744;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = 22745;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = 22746;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = 22747;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 22749;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 22750;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 22752;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 22754;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 22756;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Manufacturer = 22757;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Model = 22759;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_ProductCode = 22763;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_SerialNumber = 22766;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = 22771;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 22774;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 22784;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 22785;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 22786;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 22787;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 22789;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 22790;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 22792;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 22794;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 22796;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 22811;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 22813;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 22818;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 22820;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 22822;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 22827;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 22828;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 22829;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 22830;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 22831;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 22832;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 22835;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 22836;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 22837;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 22838;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 22843;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 22849;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 22855;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 22865;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 22866;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 22867;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 22868;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 22870;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 22871;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 22873;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 22875;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 22877;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = 22893;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 22898;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 22900;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 22902;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 22907;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 22908;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 22909;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 22910;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 22911;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 22912;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 22915;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 22916;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 22917;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 22927;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 22928;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 22929;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 22930;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 22932;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 22933;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 22935;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 22937;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 22939;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_Locked = 23440;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_LockingClient = 23441;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_LockingUser = 23442;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_RemainingLockTime = 23443;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = 23445;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = 23446;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = 23448;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = 23450;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = 23452;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Manufacturer = 23453;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Model = 23455;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_ProductCode = 23459;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_SerialNumber = 23462;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_CurrentUser_Level = 23468;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = 23479;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = 23480;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = 23481;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = 23482;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 23484;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 23485;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 23487;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 23489;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 23491;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = 23515;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = 23516;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = 23517;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = 23518;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 23520;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 23521;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 23523;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 23525;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 23527;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = 23528;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = 23530;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = 23532;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = 23551;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = 23552;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = 23553;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 23554;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 23556;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 23557;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 23559;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 23561;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 23563;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = 23577;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 23578;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 23579;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 23589;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = 23595;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = 23601;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = 23607;

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = 23613;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_Locked = 23623;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = 23624;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = 23625;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = 23626;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = 23628;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = 23629;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = 23631;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = 23633;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = 23635;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 23652;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 23653;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 23656;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 23657;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 23658;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = 23659;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = 23660;

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint R02_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = 23661;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_Locked = 23670;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_LockingClient = 23671;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_LockingUser = 23672;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_RemainingLockTime = 23673;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_InitLock_InputArguments = 23675;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_InitLock_OutputArguments = 23676;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_RenewLock_OutputArguments = 23678;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_ExitLock_OutputArguments = 23680;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Lock_BreakLock_OutputArguments = 23682;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Manufacturer Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Manufacturer = 23683;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Model Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Model = 23685;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_ProductCode Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_ProductCode = 23689;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_SerialNumber Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_SerialNumber = 23692;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_MotionDeviceCategory = 23697;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_ParameterSet_SpeedOverride = 23700;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_Locked = 23710;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingClient = 23711;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingUser = 23712;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RemainingLockTime = 23713;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 23715;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 23716;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 23718;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 23720;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 23722;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_MotionProfile = 23737;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass = 23739;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 23744;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 23746;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 23748;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 23753;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 23754;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 23755;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 23756;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 23757;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 23758;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 23761;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 23762;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 23763;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition = 23764;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 23769;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 23775;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 23781;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_Locked = 23791;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 23792;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 23793;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 23794;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 23796;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 23797;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 23799;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 23801;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 23803;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass = 23819;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass_EngineeringUnits = 24301;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates = 24303;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation = 24305;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 24310;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 24311;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 24312;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_A = 24313;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_B = 24314;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_C = 24315;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_X = 24318;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Y = 24319;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Z = 24320;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 24330;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 24331;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 24332;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 24333;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 24335;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 24336;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 24338;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 24340;

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 24342;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_Locked = 24365;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_LockingClient = 24366;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_LockingUser = 24367;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_RemainingLockTime = 24368;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_InitLock_InputArguments = 24370;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_InitLock_OutputArguments = 24371;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_RenewLock_OutputArguments = 24373;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_ExitLock_OutputArguments = 24375;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Lock_BreakLock_OutputArguments = 24377;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Manufacturer Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Manufacturer = 24378;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Model Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Model = 24380;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ProductCode Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_ProductCode = 24384;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_SerialNumber Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_SerialNumber = 24387;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_CurrentUser_Level Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_CurrentUser_Level = 24393;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_Locked = 24404;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingClient = 24405;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingUser = 24406;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RemainingLockTime = 24407;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 24409;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 24410;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 24412;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 24414;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 24416;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_Locked = 24440;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingClient = 24441;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingUser = 24442;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RemainingLockTime = 24443;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 24445;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 24446;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 24448;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 24450;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 24452;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Manufacturer = 24453;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Model = 24455;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_Software_SoftwareIdentifier_SoftwareRevision = 24457;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_Locked = 24476;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingClient = 24477;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingUser = 24478;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 24479;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 24481;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 24482;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 24484;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 24486;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 24488;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ComponentName = 24502;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 24503;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 24504;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 24514;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_ParameterSet_CabinetFanSpeed_EngineeringUnits = 24520;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_ParameterSet_CPUFanSpeed_EngineeringUnits = 24526;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_ParameterSet_InputVoltage_EngineeringUnits = 24532;

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R02_Controllers_Controller_R02_ParameterSet_Temperature_EngineeringUnits = 24538;

        /// <summary>
        /// The identifier for the R03_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Lock_Locked = 24549;

        /// <summary>
        /// The identifier for the R03_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Lock_LockingClient = 24550;

        /// <summary>
        /// The identifier for the R03_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Lock_LockingUser = 24551;

        /// <summary>
        /// The identifier for the R03_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Lock_RemainingLockTime = 24552;

        /// <summary>
        /// The identifier for the R03_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Lock_InitLock_InputArguments = 24554;

        /// <summary>
        /// The identifier for the R03_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Lock_InitLock_OutputArguments = 24555;

        /// <summary>
        /// The identifier for the R03_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Lock_RenewLock_OutputArguments = 24557;

        /// <summary>
        /// The identifier for the R03_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Lock_ExitLock_OutputArguments = 24559;

        /// <summary>
        /// The identifier for the R03_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Lock_BreakLock_OutputArguments = 24561;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_Locked = 24585;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = 24586;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = 24587;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = 24588;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 24590;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 24591;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 24593;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 24595;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 24597;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Manufacturer = 24598;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Model = 24600;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_ProductCode = 24604;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_SerialNumber = 24607;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = 24612;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 24615;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 24625;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 24626;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 24627;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 24628;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 24630;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 24631;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 24633;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 24635;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 24637;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 24652;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 24654;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 24659;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 24661;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 24663;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 24668;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 24669;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 24670;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 24671;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 24672;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 24673;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 24676;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 24677;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 24678;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 24679;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 24684;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 24690;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 25173;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 25183;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 25184;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 25185;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 25186;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 25188;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 25189;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 25191;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 25193;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 25195;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = 25211;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 25216;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 25218;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 25220;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 25225;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 25226;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 25227;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 25228;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 25229;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 25230;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 25233;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 25234;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 25235;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 25245;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 25246;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 25247;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 25248;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 25250;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 25251;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 25253;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 25255;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 25257;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_Locked = 25281;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_LockingClient = 25282;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_LockingUser = 25283;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_RemainingLockTime = 25284;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = 25286;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = 25287;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = 25289;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = 25291;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = 25293;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Manufacturer = 25294;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Model = 25296;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_ProductCode = 25300;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_SerialNumber = 25303;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_CurrentUser_Level = 25309;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = 25320;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = 25321;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = 25322;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = 25323;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 25325;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 25326;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 25328;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 25330;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 25332;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = 25356;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = 25357;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = 25358;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = 25359;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 25361;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 25362;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 25364;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 25366;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 25368;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = 25369;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = 25371;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = 25373;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = 25392;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = 25393;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = 25394;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 25395;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 25397;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 25398;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 25400;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 25402;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 25404;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = 25418;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 25419;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 25420;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 25430;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = 25436;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = 25442;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = 25448;

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = 25454;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_Locked = 25464;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = 25465;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = 25466;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = 25467;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = 25469;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = 25470;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = 25472;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = 25474;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = 25476;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 25493;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 25494;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 25497;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 25498;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 25499;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = 25500;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = 25501;

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint R03_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = 25502;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_Locked = 25511;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_LockingClient = 25512;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_LockingUser = 25513;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_RemainingLockTime = 25514;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_InitLock_InputArguments = 25516;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_InitLock_OutputArguments = 25517;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_RenewLock_OutputArguments = 25519;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_ExitLock_OutputArguments = 25521;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Lock_BreakLock_OutputArguments = 25523;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Manufacturer Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Manufacturer = 25524;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Model Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Model = 25526;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_ProductCode Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_ProductCode = 25530;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_SerialNumber Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_SerialNumber = 25533;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_MotionDeviceCategory = 25538;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_ParameterSet_SpeedOverride = 25541;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_Locked = 25551;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingClient = 25552;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingUser = 25553;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RemainingLockTime = 25554;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 25556;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 25557;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 25559;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 25561;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 25563;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_MotionProfile = 25578;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass = 25580;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 25585;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 25587;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 25589;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 25594;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 25595;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 25596;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 25597;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 25598;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 25599;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 25602;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 25603;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 25604;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition = 25605;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 25610;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 25616;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 25622;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_Locked = 25632;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 25633;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 25634;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 25635;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 25637;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 25638;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 25640;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 25642;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 25644;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass = 25660;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass_EngineeringUnits = 25665;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates = 25667;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation = 25669;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 25674;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 25675;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 25676;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_A = 25677;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_B = 25678;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_C = 25679;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_X = 25682;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Y = 25683;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Z = 25684;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 25694;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 25695;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 25696;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 25697;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 25699;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 25700;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 25702;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 25704;

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 25706;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_Locked = 25729;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_LockingClient = 25730;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_LockingUser = 25731;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_RemainingLockTime = 25732;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_InitLock_InputArguments = 25734;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_InitLock_OutputArguments = 25735;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_RenewLock_OutputArguments = 25737;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_ExitLock_OutputArguments = 25739;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Lock_BreakLock_OutputArguments = 25741;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Manufacturer Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Manufacturer = 25742;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Model Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Model = 25744;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ProductCode Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_ProductCode = 25748;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_SerialNumber Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_SerialNumber = 25751;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_CurrentUser_Level Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_CurrentUser_Level = 25757;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_Locked = 25768;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingClient = 25769;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingUser = 25770;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RemainingLockTime = 25771;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 25773;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 25774;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 25776;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 25778;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 25780;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_Locked = 25804;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingClient = 25805;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingUser = 25806;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RemainingLockTime = 25807;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 25809;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 25810;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 25812;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 25814;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 25816;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Manufacturer = 25817;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Model = 25819;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_Software_SoftwareIdentifier_SoftwareRevision = 25821;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_Locked = 25840;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingClient = 25841;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingUser = 25842;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 25843;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 25845;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 25846;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 25848;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 25850;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 25852;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ComponentName = 25866;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 25867;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 25868;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 25878;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_ParameterSet_CabinetFanSpeed_EngineeringUnits = 25884;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_ParameterSet_CPUFanSpeed_EngineeringUnits = 25890;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_ParameterSet_InputVoltage_EngineeringUnits = 25896;

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R03_Controllers_Controller_R03_ParameterSet_Temperature_EngineeringUnits = 25902;

        /// <summary>
        /// The identifier for the R04_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Lock_Locked = 25913;

        /// <summary>
        /// The identifier for the R04_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Lock_LockingClient = 25914;

        /// <summary>
        /// The identifier for the R04_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Lock_LockingUser = 25915;

        /// <summary>
        /// The identifier for the R04_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Lock_RemainingLockTime = 25916;

        /// <summary>
        /// The identifier for the R04_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Lock_InitLock_InputArguments = 25918;

        /// <summary>
        /// The identifier for the R04_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Lock_InitLock_OutputArguments = 25919;

        /// <summary>
        /// The identifier for the R04_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Lock_RenewLock_OutputArguments = 25921;

        /// <summary>
        /// The identifier for the R04_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Lock_ExitLock_OutputArguments = 25923;

        /// <summary>
        /// The identifier for the R04_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Lock_BreakLock_OutputArguments = 25925;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_Locked = 25949;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = 25950;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = 25951;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = 25952;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 25954;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 25955;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 25957;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 25959;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 25961;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Manufacturer = 25962;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Model = 25964;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_ProductCode = 25968;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_SerialNumber = 25971;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = 25976;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 25979;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 25989;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 25990;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 25991;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 25992;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 25994;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 25995;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 25997;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 25999;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 26001;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 26016;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 26018;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 26023;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 26025;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 26027;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 26032;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 26033;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 26034;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 26035;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 26036;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 26037;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 26040;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 26041;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 26042;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 26043;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 26048;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 26054;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 26060;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 26070;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 26071;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 26072;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 26073;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 26075;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 26076;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 26078;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 26080;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 26082;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = 26098;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 26103;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 26105;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 26107;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 26112;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 26113;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 26114;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 26115;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 26116;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 26117;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 26120;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 26121;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 26122;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 26132;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 26133;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 26134;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 26135;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 26137;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 26138;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 26140;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 26142;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 26144;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_Locked = 26168;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_LockingClient = 26169;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_LockingUser = 26170;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_RemainingLockTime = 26171;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = 26173;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = 26174;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = 26176;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = 26178;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = 26180;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Manufacturer = 26181;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Model = 26183;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_ProductCode = 26187;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_SerialNumber = 26190;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_CurrentUser_Level = 26196;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = 26207;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = 26208;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = 26209;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = 26210;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 26212;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 26213;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 26215;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 26217;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 26219;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = 26243;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = 26244;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = 26245;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = 26246;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 26248;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 26249;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 26251;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 26253;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 26255;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = 26256;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = 26258;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = 26260;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = 26279;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = 26280;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = 26281;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 26282;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 26284;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 26285;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 26287;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 26289;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 26291;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = 26305;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 26306;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 26307;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 26317;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = 26323;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = 26329;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = 26335;

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = 26341;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_Locked = 26351;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = 26352;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = 26353;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = 26354;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = 26356;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = 26357;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = 26359;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = 26361;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = 26363;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 26380;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 26381;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 26384;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 26385;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 26386;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = 26387;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = 26388;

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint R04_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = 26389;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_Locked = 26398;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_LockingClient = 26399;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_LockingUser = 26400;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_RemainingLockTime = 26401;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_InitLock_InputArguments = 26403;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_InitLock_OutputArguments = 26404;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_RenewLock_OutputArguments = 26406;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_ExitLock_OutputArguments = 26408;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Lock_BreakLock_OutputArguments = 26410;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Manufacturer Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Manufacturer = 26411;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Model Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Model = 26413;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_ProductCode Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_ProductCode = 26417;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_SerialNumber Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_SerialNumber = 26420;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_MotionDeviceCategory = 26425;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_ParameterSet_SpeedOverride = 26428;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_Locked = 26438;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingClient = 26439;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingUser = 26440;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RemainingLockTime = 26441;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 26443;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 26444;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 26446;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 26448;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 26450;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_MotionProfile = 26465;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass = 26467;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 26472;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 26474;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 26476;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 26481;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 26482;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 26483;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 26484;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 26485;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 26486;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 26489;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 26490;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 26491;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition = 26492;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 26497;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 26503;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 26509;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_Locked = 26519;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 26520;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 26521;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 26522;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 26524;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 26525;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 26527;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 26529;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 26531;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass = 26547;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass_EngineeringUnits = 26552;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates = 26554;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation = 26556;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 26561;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 26562;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 26563;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_A = 26564;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_B = 26565;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_C = 26566;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_X = 26569;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Y = 26570;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Z = 26571;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 26581;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 26582;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 26583;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 26584;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 26586;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 26587;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 26589;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 26591;

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 26593;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_Locked = 26616;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_LockingClient = 26617;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_LockingUser = 26618;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_RemainingLockTime = 26619;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_InitLock_InputArguments = 26621;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_InitLock_OutputArguments = 26622;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_RenewLock_OutputArguments = 26624;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_ExitLock_OutputArguments = 26626;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Lock_BreakLock_OutputArguments = 26628;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Manufacturer Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Manufacturer = 26629;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Model Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Model = 26631;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ProductCode Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_ProductCode = 26635;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_SerialNumber Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_SerialNumber = 26638;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_CurrentUser_Level Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_CurrentUser_Level = 26644;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_Locked = 26655;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingClient = 26656;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingUser = 26657;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RemainingLockTime = 26658;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 26660;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 26661;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 26663;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 26665;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 26667;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_Locked = 26691;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingClient = 26692;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingUser = 26693;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RemainingLockTime = 26694;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 26696;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 26697;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 26699;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 26701;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 26703;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Manufacturer = 26704;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Model = 26706;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_Software_SoftwareIdentifier_SoftwareRevision = 26708;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_Locked = 26727;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingClient = 26728;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingUser = 26729;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 26730;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 26732;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 26733;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 26735;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 27158;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 27160;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ComponentName = 27174;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 27175;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 27176;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 27186;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_ParameterSet_CabinetFanSpeed_EngineeringUnits = 27195;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_ParameterSet_CPUFanSpeed_EngineeringUnits = 27201;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_ParameterSet_InputVoltage_EngineeringUnits = 27207;

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R04_Controllers_Controller_R04_ParameterSet_Temperature_EngineeringUnits = 27213;

        /// <summary>
        /// The identifier for the R05_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Lock_Locked = 27224;

        /// <summary>
        /// The identifier for the R05_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Lock_LockingClient = 27225;

        /// <summary>
        /// The identifier for the R05_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Lock_LockingUser = 27226;

        /// <summary>
        /// The identifier for the R05_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Lock_RemainingLockTime = 27227;

        /// <summary>
        /// The identifier for the R05_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Lock_InitLock_InputArguments = 27229;

        /// <summary>
        /// The identifier for the R05_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Lock_InitLock_OutputArguments = 27230;

        /// <summary>
        /// The identifier for the R05_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Lock_RenewLock_OutputArguments = 27232;

        /// <summary>
        /// The identifier for the R05_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Lock_ExitLock_OutputArguments = 27234;

        /// <summary>
        /// The identifier for the R05_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Lock_BreakLock_OutputArguments = 27236;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_Locked = 27260;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = 27261;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = 27262;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = 27263;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 27265;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 27266;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 27268;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 27270;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 27272;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Manufacturer = 27273;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Model = 27275;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_ProductCode = 27279;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_SerialNumber = 27282;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = 27287;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 27290;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 27300;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 27301;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 27302;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 27303;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 27305;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 27306;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 27308;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 27310;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 27312;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 27327;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 27329;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 27334;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 27336;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 27338;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 27343;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 27344;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 27345;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 27346;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 27347;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 27348;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 27351;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 27352;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 27353;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 27354;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 27359;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 27365;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 27371;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 27381;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 27382;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 27383;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 27384;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 27386;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 27387;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 27389;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 27391;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 27393;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = 27409;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 27414;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 27416;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 27418;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 27423;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 27424;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 27425;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 27426;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 27427;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 27428;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 27431;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 27432;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 27433;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 27443;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 27444;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 27445;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 27446;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 27448;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 27449;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 27451;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 27453;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 27455;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_Locked = 27479;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_LockingClient = 27480;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_LockingUser = 27481;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_RemainingLockTime = 27482;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = 27484;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = 27485;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = 27487;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = 27489;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = 27491;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Manufacturer = 27492;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Model = 27494;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_ProductCode = 27498;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_SerialNumber = 27501;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_CurrentUser_Level = 27507;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = 27518;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = 27519;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = 27520;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = 27521;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 27523;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 27524;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 27526;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 27528;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 27530;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = 27554;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = 27555;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = 27556;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = 27557;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 27559;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 27560;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 27562;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 27564;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 27566;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = 27567;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = 27569;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = 27571;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = 27590;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = 27591;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = 27592;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 27593;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 27595;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 27596;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 27598;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 27600;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 27602;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = 27636;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 27637;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 27638;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 27668;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = 27674;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = 27690;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = 27706;

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = 27712;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_Locked = 27722;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = 27723;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = 27724;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = 27725;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = 27727;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = 27728;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = 27730;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = 27732;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = 27734;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 27751;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 27752;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 27755;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 27756;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 27757;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = 27758;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = 27759;

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint R05_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = 27760;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_Locked = 27769;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_LockingClient = 27770;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_LockingUser = 27771;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_RemainingLockTime = 27772;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_InitLock_InputArguments = 27774;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_InitLock_OutputArguments = 27775;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_RenewLock_OutputArguments = 27777;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_ExitLock_OutputArguments = 27779;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Lock_BreakLock_OutputArguments = 27781;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Manufacturer Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Manufacturer = 27782;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Model Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Model = 27784;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_ProductCode Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_ProductCode = 27788;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_SerialNumber Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_SerialNumber = 27791;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_MotionDeviceCategory Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_MotionDeviceCategory = 27796;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_ParameterSet_SpeedOverride = 27799;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_Locked = 27809;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingClient = 27810;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingUser = 27811;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RemainingLockTime = 27812;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 27814;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 27815;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 27817;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 27819;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 27821;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_MotionProfile = 27836;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass = 27838;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 27843;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 27845;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 27847;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 27852;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 27853;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 27854;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 27855;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 27856;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 27857;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 27860;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 27861;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 27862;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition = 27863;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 27868;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 27874;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 27880;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_Locked = 27890;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 27891;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 27892;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 27893;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 27895;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 27896;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 27898;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 27900;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 27902;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass = 27918;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass_EngineeringUnits = 27923;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates = 27925;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation = 27927;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 27932;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 27933;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 27934;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_A = 27935;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_B = 27936;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_C = 27937;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_X = 27940;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Y = 27941;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Z = 27942;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 27952;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 27953;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 27954;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 27955;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 27957;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 27958;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 27960;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 27962;

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 27964;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_Locked = 27987;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_LockingClient = 27988;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_LockingUser = 27989;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_RemainingLockTime = 27990;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_InitLock_InputArguments = 27992;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_InitLock_OutputArguments = 27993;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_RenewLock_OutputArguments = 27995;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_ExitLock_OutputArguments = 27997;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Lock_BreakLock_OutputArguments = 27999;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Manufacturer Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Manufacturer = 28000;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Model Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Model = 28002;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ProductCode Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_ProductCode = 28006;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_SerialNumber Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_SerialNumber = 28009;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_CurrentUser_Level Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_CurrentUser_Level = 28015;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_Locked = 28026;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingClient = 28027;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingUser = 28028;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RemainingLockTime = 28029;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 28031;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 28032;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 28034;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 28036;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 28038;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_Locked = 28062;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingClient = 28063;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingUser = 28064;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RemainingLockTime = 28065;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 28067;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 28068;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 28070;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 28072;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 28074;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Manufacturer = 28075;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Model = 28077;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_Software_SoftwareIdentifier_SoftwareRevision = 28079;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_Locked = 28098;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingClient = 28099;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingUser = 28100;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 28101;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 28103;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 28104;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 28106;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 28108;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 28110;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ComponentName = 28124;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 28125;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 28126;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 28136;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_ParameterSet_CabinetFanSpeed_EngineeringUnits = 28142;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_ParameterSet_CPUFanSpeed_EngineeringUnits = 28148;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_ParameterSet_InputVoltage_EngineeringUnits = 28154;

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint R05_Controllers_Controller_R05_ParameterSet_Temperature_EngineeringUnits = 28160;

        /// <summary>
        /// The identifier for the Conveyors_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Lock_Locked = 28171;

        /// <summary>
        /// The identifier for the Conveyors_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Lock_LockingClient = 28172;

        /// <summary>
        /// The identifier for the Conveyors_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Lock_LockingUser = 28173;

        /// <summary>
        /// The identifier for the Conveyors_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Lock_RemainingLockTime = 28174;

        /// <summary>
        /// The identifier for the Conveyors_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Lock_InitLock_InputArguments = 28176;

        /// <summary>
        /// The identifier for the Conveyors_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Lock_InitLock_OutputArguments = 28177;

        /// <summary>
        /// The identifier for the Conveyors_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Lock_RenewLock_OutputArguments = 28179;

        /// <summary>
        /// The identifier for the Conveyors_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Lock_ExitLock_OutputArguments = 28181;

        /// <summary>
        /// The identifier for the Conveyors_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Lock_BreakLock_OutputArguments = 28183;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_Locked = 28207;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = 28208;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = 28209;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = 28210;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = 28212;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = 28213;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = 28215;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = 28217;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = 28219;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Manufacturer = 28220;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Model = 28222;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_ProductCode = 28226;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_SerialNumber = 28229;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = 28234;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = 28237;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = 28247;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = 28248;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = 28249;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = 28250;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 28252;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 28253;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 28255;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 28257;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 28259;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = 28274;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = 28276;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 28281;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 28283;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 28285;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 28290;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 28291;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 28292;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 28293;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 28294;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 28295;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 28298;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 28299;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 28300;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = 28301;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 28306;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 28312;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 28318;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = 28328;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 28329;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 28330;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 28331;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 28333;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 28334;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 28336;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 28338;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 28340;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = 28356;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = 28361;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = 28363;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = 28365;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 28370;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 28371;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 28372;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = 28373;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = 28374;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = 28375;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = 28378;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = 28379;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = 28380;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 28390;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 28391;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 28392;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 28393;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 28395;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 28396;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 28398;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 28400;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 28402;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_Locked = 28426;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_LockingClient = 28427;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_LockingUser = 28428;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_RemainingLockTime = 28429;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = 28431;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = 28432;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = 28434;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = 28436;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = 28438;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Manufacturer = 28439;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Model = 28441;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_ProductCode = 28445;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_SerialNumber = 28448;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_CurrentUser_Level = 28454;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = 28465;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = 28466;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = 28467;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = 28468;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = 28470;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = 28471;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = 28473;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = 28475;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = 28477;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = 28501;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = 28502;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = 28503;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = 28504;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = 28506;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = 28507;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = 28509;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = 28511;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = 28513;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = 28514;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = 28516;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = 28518;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = 28537;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = 28538;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = 28539;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = 28540;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = 28542;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = 28543;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = 28545;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = 28547;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = 28549;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = 28563;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = 28564;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = 28565;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = 28575;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = 28581;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = 28587;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = 28593;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = 28599;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_Locked = 28609;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = 28610;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = 28611;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = 28612;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = 28614;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = 28615;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = 28617;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = 28619;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = 28621;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = 28638;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = 28639;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = 28642;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = 28643;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = 28644;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = 28645;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = 28646;

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public const uint Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = 28647;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_Locked = 28656;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_LockingClient = 28657;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_LockingUser = 28658;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_RemainingLockTime = 28659;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_InputArguments = 28661;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_OutputArguments = 28662;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock_OutputArguments = 28664;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock_OutputArguments = 28666;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock_OutputArguments = 28668;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Manufacturer = 28669;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Model Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Model = 28671;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_ProductCode = 28675;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_SerialNumber = 28678;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_MotionDeviceCategory Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_MotionDeviceCategory = 28683;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_ParameterSet_SpeedOverride = 28686;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_Locked = 28696;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingClient = 28697;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingUser = 28698;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RemainingLockTime = 28699;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 28701;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 28702;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 28704;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 28706;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 28708;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_MotionProfile = 28723;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass = 28725;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 28730;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 28732;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 28734;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 28739;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 28740;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 28741;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 28742;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 28743;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 28744;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 28747;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 28748;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 28749;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition = 28750;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 28755;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 28761;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 28767;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_Locked = 28777;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 28778;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 28779;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 28780;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 28782;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 28783;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 28785;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 28787;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 28789;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass = 28805;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass_EngineeringUnits = 28810;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates = 28812;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation = 28814;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 28819;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 28820;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 28821;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_A = 28822;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_B = 28823;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_C = 28824;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_X = 28827;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Y = 28828;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Z = 28829;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 28839;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 28840;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 28841;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 28842;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 28844;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 28845;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 28847;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 28849;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 28851;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_Locked = 28874;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_LockingClient = 28875;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_LockingUser = 28876;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_RemainingLockTime = 28877;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_InputArguments = 28879;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_OutputArguments = 28880;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock_OutputArguments = 28882;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock_OutputArguments = 28884;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock_OutputArguments = 28886;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Manufacturer = 28887;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Model Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Model = 28889;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_ProductCode = 28893;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_SerialNumber = 28896;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_MotionDeviceCategory Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_MotionDeviceCategory = 28901;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_ParameterSet_SpeedOverride = 28904;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_Locked = 28914;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingClient = 28915;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingUser = 28916;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RemainingLockTime = 28917;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 28919;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 28920;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 28922;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 28924;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 28926;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_MotionProfile = 28941;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass = 28943;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 28948;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 28950;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 28952;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 28957;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 28958;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 28959;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 28960;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 28961;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 28962;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 28965;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 28966;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 28967;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition = 28968;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 28973;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 28979;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 28985;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_Locked = 28995;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 28996;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 28997;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 28998;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 29000;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 29001;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 29003;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 29005;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 29007;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass = 29023;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass_EngineeringUnits = 29028;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates = 29030;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation = 29032;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 29037;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 29038;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 29039;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_A = 29040;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_B = 29041;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_C = 29042;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_X = 29045;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Y = 29046;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Z = 29047;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 29057;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 29058;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 29059;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 29060;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 29062;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 29063;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 29065;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 29067;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 29069;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_Locked = 29092;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_LockingClient = 29093;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_LockingUser = 29094;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_RemainingLockTime = 29095;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_InputArguments = 29097;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_OutputArguments = 29098;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock_OutputArguments = 29100;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock_OutputArguments = 29102;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock_OutputArguments = 29104;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Manufacturer = 29105;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Model Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Model = 29107;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_ProductCode = 29111;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_SerialNumber = 29114;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_MotionDeviceCategory Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_MotionDeviceCategory = 29119;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_ParameterSet_SpeedOverride = 29122;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_Locked = 29132;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingClient = 29133;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingUser = 29134;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RemainingLockTime = 29135;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 29137;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 29138;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 29140;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 29142;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 29144;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_MotionProfile = 29159;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass = 29161;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 29166;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 29168;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 29170;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 29175;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 29176;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 29177;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 29178;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 29179;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 29180;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 29183;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 29184;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 29185;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition = 29186;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 29191;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 29197;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 29203;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_Locked = 29213;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 29214;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 29215;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 29216;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 29218;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 29219;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 29221;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 29223;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 29225;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass = 29241;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass_EngineeringUnits = 29246;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates = 29248;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation = 29250;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 29255;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 29256;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 29257;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_A = 29258;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_B = 29259;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_C = 29260;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_X = 29263;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Y = 29264;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Z = 29265;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 29275;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 29276;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 29277;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 29278;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 29280;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 29281;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 29283;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 29285;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 29287;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_Locked = 29310;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_LockingClient = 29311;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_LockingUser = 29312;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_RemainingLockTime = 29313;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_InputArguments = 29315;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_OutputArguments = 29316;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock_OutputArguments = 29318;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock_OutputArguments = 29320;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock_OutputArguments = 29322;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Manufacturer = 29323;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Model Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Model = 29325;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_ProductCode = 29329;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_SerialNumber = 29332;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_MotionDeviceCategory Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_MotionDeviceCategory = 29337;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_ParameterSet_SpeedOverride = 29340;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_Locked = 29350;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingClient = 29351;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingUser = 29352;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RemainingLockTime = 29353;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_InputArguments = 29355;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = 29356;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = 29358;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = 29360;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = 29362;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_MotionProfile = 29377;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass = 29379;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = 29384;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = 29386;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = 29388;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = 29393;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = 29394;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = 29395;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = 29396;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = 29397;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = 29398;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = 29401;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = 29402;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = 29403;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition = 29404;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = 29409;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = 29415;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = 29421;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_Locked = 29431;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = 29432;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = 29433;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = 29434;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = 29436;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = 29437;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = 29439;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = 29441;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = 29443;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass = 29459;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass_EngineeringUnits = 29464;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates = 29466;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation = 29468;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_X = 29473;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = 29474;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = 29475;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_A = 29476;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_B = 29477;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_C = 29478;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_X = 29481;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Y = 29482;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Z = 29483;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = 29493;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = 29494;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = 29495;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = 29496;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = 29498;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = 29499;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = 29501;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = 29503;

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = 29505;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_Locked = 29528;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_LockingClient = 29529;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_LockingUser = 29530;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_RemainingLockTime = 29531;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_InitLock_InputArguments = 29533;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_InitLock_OutputArguments = 29534;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_RenewLock_OutputArguments = 29536;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_ExitLock_OutputArguments = 29538;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Lock_BreakLock_OutputArguments = 29540;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Manufacturer = 29541;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Model Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_Model = 29543;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_HardwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_HardwareRevision = 29544;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_SoftwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_SoftwareRevision = 29545;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_DeviceRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_DeviceRevision = 29546;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_ProductCode = 29547;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_DeviceManual Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_DeviceManual = 29548;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_SerialNumber = 29550;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_RevisionCounter Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_RevisionCounter = 29552;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ParameterSet_Temperature Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_ParameterSet_Temperature = 15320;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_1_ParameterSet_Temperature_EngineeringUnits = 15325;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_Locked = 29579;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_LockingClient = 29580;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_LockingUser = 29581;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_RemainingLockTime = 29582;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_InitLock_InputArguments = 29584;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_InitLock_OutputArguments = 29585;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_RenewLock_OutputArguments = 29587;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_ExitLock_OutputArguments = 29589;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Lock_BreakLock_OutputArguments = 29591;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Manufacturer = 29592;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Model Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_Model = 29594;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_HardwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_HardwareRevision = 29595;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_SoftwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_SoftwareRevision = 29596;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_DeviceRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_DeviceRevision = 29597;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_ProductCode = 29598;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_DeviceManual Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_DeviceManual = 29599;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_SerialNumber = 29601;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_RevisionCounter Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_RevisionCounter = 29603;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ParameterSet_Temperature Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_ParameterSet_Temperature = 15326;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_2_ParameterSet_Temperature_EngineeringUnits = 15331;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_Locked = 29630;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_LockingClient = 29631;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_LockingUser = 29632;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_RemainingLockTime = 29633;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_InitLock_InputArguments = 29635;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_InitLock_OutputArguments = 29636;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_RenewLock_OutputArguments = 29638;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_ExitLock_OutputArguments = 29640;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Lock_BreakLock_OutputArguments = 29642;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Manufacturer = 29643;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Model Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_Model = 29645;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_HardwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_HardwareRevision = 29646;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_SoftwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_SoftwareRevision = 29647;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_DeviceRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_DeviceRevision = 29648;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_ProductCode = 29649;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_DeviceManual Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_DeviceManual = 29650;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_SerialNumber = 29652;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_RevisionCounter Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_RevisionCounter = 29654;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ParameterSet_Temperature Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_ParameterSet_Temperature = 15332;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_3_ParameterSet_Temperature_EngineeringUnits = 15337;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_Locked Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_Locked = 29681;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_LockingClient Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_LockingClient = 29682;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_LockingUser Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_LockingUser = 29683;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_RemainingLockTime Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_RemainingLockTime = 29684;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_InitLock_InputArguments = 29686;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_InitLock_OutputArguments = 29687;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_RenewLock_OutputArguments = 29689;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_ExitLock_OutputArguments = 29691;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Lock_BreakLock_OutputArguments = 29693;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Manufacturer Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Manufacturer = 29694;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Model Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_Model = 29696;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_HardwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_HardwareRevision = 29697;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_SoftwareRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_SoftwareRevision = 29698;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_DeviceRevision Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_DeviceRevision = 29699;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ProductCode Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_ProductCode = 29700;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_DeviceManual Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_DeviceManual = 29701;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_SerialNumber Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_SerialNumber = 29703;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_RevisionCounter Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_RevisionCounter = 29705;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ParameterSet_Temperature Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_ParameterSet_Temperature = 15338;

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public const uint Conveyors_Controllers_VFD_4_ParameterSet_Temperature_EngineeringUnits = 15343;
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Open = new ExpandedNodeId(Opc.Ua.Ff.Methods.OPCUAConneXtNamespaceMetadata_NamespaceFile_Open, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Close = new ExpandedNodeId(Opc.Ua.Ff.Methods.OPCUAConneXtNamespaceMetadata_NamespaceFile_Close, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Read = new ExpandedNodeId(Opc.Ua.Ff.Methods.OPCUAConneXtNamespaceMetadata_NamespaceFile_Read, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Write = new ExpandedNodeId(Opc.Ua.Ff.Methods.OPCUAConneXtNamespaceMetadata_NamespaceFile_Write, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition = new ExpandedNodeId(Opc.Ua.Ff.Methods.OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition = new ExpandedNodeId(Opc.Ua.Ff.Methods.OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_CPIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_CPIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_CPIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_CPIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_MethodSet_Start Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_MethodSet_Start = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_MethodSet_Start, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_MethodSet_Stop Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_MethodSet_Stop = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlConfigurationType_MethodSet_Stop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_CPIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_CPIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_CPIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_CPIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_MethodSet_Start Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_MethodSet_Start = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_MethodSet_Start, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_MethodSet_Stop Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_MethodSet_Stop = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlResourceType_MethodSet_Stop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramOrganizationUnitType_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramOrganizationUnitType_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramOrganizationUnitType_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramOrganizationUnitType_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramType_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramType_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramType_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlProgramType_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlFunctionBlockType_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlFunctionBlockType_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlFunctionBlockType_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.CtrlFunctionBlockType_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_SafetyStatesIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_SafetyStatesIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_SafetyStatesIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_SafetyStatesIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_SafetyStatesIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_CPIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_CPIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_CPIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.SINAMICS_G120C_CPIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_CPIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_CPIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_CPIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.USC_PLC_CPIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_1_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_1_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_1_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_1_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_2_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_2_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_2_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_2_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_3_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_3_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_3_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_3_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_InitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_InitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_4_Lock_InitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_RenewLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_RenewLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_4_Lock_RenewLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_ExitLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_ExitLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_4_Lock_ExitLock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_BreakLock Method.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_BreakLock = new ExpandedNodeId(Opc.Ua.Ff.Methods.Conveyors_Controllers_VFD_4_Lock_BreakLock, Opc.Ua.Ff.Namespaces.FutureFactories);
    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata Object.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata = new ExpandedNodeId(Opc.Ua.Ff.Objects.OPCUAConneXtNamespaceMetadata, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_MethodSet Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_MethodSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_MethodSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_NetworkAddress = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_CPIdentifier_NetworkAddress, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Resources Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Resources = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_Resources, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Resources_SupportedTypes Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Resources_SupportedTypes = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_Resources_SupportedTypes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_GlobalVars Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_GlobalVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_GlobalVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_AccessVars Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_AccessVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_AccessVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_ConfigVars Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_ConfigVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_ConfigVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Configuration Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Configuration = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_Configuration, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Diagnostic Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Diagnostic = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlConfigurationType_Diagnostic, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_MethodSet Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_MethodSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_MethodSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_NetworkAddress = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_CPIdentifier_NetworkAddress, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Tasks Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Tasks = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_Tasks, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Tasks_SupportedTypes Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Tasks_SupportedTypes = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_Tasks_SupportedTypes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Programs Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Programs = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_Programs, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Programs_SupportedTypes Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Programs_SupportedTypes = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_Programs_SupportedTypes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_GlobalVars Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_GlobalVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_GlobalVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Configuration Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Configuration = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_Configuration, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Diagnostic Object.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Diagnostic = new ExpandedNodeId(Opc.Ua.Ff.Objects.CtrlResourceType_Diagnostic, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.HC10_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.GP8_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000_SafetyStatesIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000mini_SafetyStatesIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000mini_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000mini_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.YRC1000mini_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_NetworkAddress = new ExpandedNodeId(Opc.Ua.Ff.Objects.SINAMICS_G120C_CPIdentifier_NetworkAddress, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_NetworkAddress Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_NetworkAddress = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_CPIdentifier_NetworkAddress, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Resources Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Resources = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_Resources, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Resources_SupportedTypes Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Resources_SupportedTypes = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_Resources_SupportedTypes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_GlobalVars Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_GlobalVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_GlobalVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_AccessVars Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_AccessVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_AccessVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_ConfigVars Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_ConfigVars = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_ConfigVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Configuration Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Configuration = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_Configuration, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Diagnostic Object.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Diagnostic = new ExpandedNodeId(Opc.Ua.Ff.Objects.USC_PLC_Diagnostic, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01 Object.
        /// </summary>
        public static readonly ExpandedNodeId R01 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_ControllerIdentifier_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_ControllerIdentifier_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_ControllerIdentifier_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_SafetyStates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_SafetyStates_SafetyStateIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01 Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDevice_R01, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDevice_R01_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDevice_R01_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_MotionDevices_MotionDevice_R01_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01 Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_Controller_R01, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_Controller_R01_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_Controller_R01_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_Controller_R01_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02 Object.
        /// </summary>
        public static readonly ExpandedNodeId R02 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_ControllerIdentifier_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_ControllerIdentifier_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_ControllerIdentifier_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_SafetyStates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_SafetyStates_SafetyStateIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02 Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDevice_R02, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDevice_R02_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDevice_R02_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_MotionDevices_MotionDevice_R02_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02 Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_Controller_R02, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_Controller_R02_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_Controller_R02_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_Controller_R02_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03 Object.
        /// </summary>
        public static readonly ExpandedNodeId R03 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_ControllerIdentifier_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_ControllerIdentifier_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_ControllerIdentifier_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_SafetyStates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_SafetyStates_SafetyStateIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03 Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDevice_R03, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDevice_R03_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDevice_R03_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_MotionDevices_MotionDevice_R03_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03 Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_Controller_R03, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_Controller_R03_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_Controller_R03_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_Controller_R03_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04 Object.
        /// </summary>
        public static readonly ExpandedNodeId R04 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_ControllerIdentifier_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_ControllerIdentifier_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_ControllerIdentifier_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_SafetyStates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_SafetyStates_SafetyStateIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04 Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDevice_R04, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDevice_R04_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDevice_R04_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_MotionDevices_MotionDevice_R04_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04 Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_Controller_R04, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_Controller_R04_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_Controller_R04_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_Controller_R04_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05 Object.
        /// </summary>
        public static readonly ExpandedNodeId R05 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_ControllerIdentifier_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_ControllerIdentifier_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_ControllerIdentifier_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_SafetyStates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_SafetyStates_SafetyStateIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05 Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDevice_R05, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDevice_R05_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDevice_R05_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_MotionDevices_MotionDevice_R05_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05 Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05 = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_Controller_R05, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_Controller_R05_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_Controller_R05_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_Controller_R05_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_CurrentUser Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_CurrentUser = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_ControllerIdentifier_CurrentUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_ControllerIdentifier_Software, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_ControllerIdentifier_TaskControls, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_SafetyStates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_1, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_1_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_1_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_1_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_2, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_2_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_2_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_2_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_3, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_3_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_3_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_3_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_4, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_4_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_4_Axes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_MotionDevices_Conveyor_4_PowerTrains, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_1, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_1_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_2, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_2_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_3, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_3_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4 Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4 = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_4, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ParameterSet Object.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_ParameterSet = new ExpandedNodeId(Opc.Ua.Ff.Objects.Conveyors_Controllers_VFD_4_ParameterSet, Opc.Ua.Ff.Namespaces.FutureFactories);
    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the CtrlConfigurationType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.CtrlConfigurationType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.CtrlResourceType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.CtrlProgramOrganizationUnitType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.CtrlProgramType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.CtrlFunctionBlockType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlTaskType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CtrlTaskType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.CtrlTaskType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SFCType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId SFCType = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.SFCType, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10 ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId HC10 = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.HC10, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8 ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId GP8 = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.GP8, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000 ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000 = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.YRC1000, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.YRC1000mini, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C = new ExpandedNodeId(Opc.Ua.Ff.ObjectTypes.SINAMICS_G120C, Opc.Ua.Ff.Namespaces.FutureFactories);
    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the HasInputVars ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId HasInputVars = new ExpandedNodeId(Opc.Ua.Ff.ReferenceTypes.HasInputVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HasOutputVars ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId HasOutputVars = new ExpandedNodeId(Opc.Ua.Ff.ReferenceTypes.HasOutputVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HasInOutVars ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId HasInOutVars = new ExpandedNodeId(Opc.Ua.Ff.ReferenceTypes.HasInOutVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HasLocalVars ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId HasLocalVars = new ExpandedNodeId(Opc.Ua.Ff.ReferenceTypes.HasLocalVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HasExternalVars ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId HasExternalVars = new ExpandedNodeId(Opc.Ua.Ff.ReferenceTypes.HasExternalVars, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the With ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId With = new ExpandedNodeId(Opc.Ua.Ff.ReferenceTypes.With, Opc.Ua.Ff.Namespaces.FutureFactories);
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceUri = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceUri, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceVersion = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceVersion, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespacePublicationDate Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespacePublicationDate = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespacePublicationDate, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_IsNamespaceSubset Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_IsNamespaceSubset = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_IsNamespaceSubset, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_StaticNodeIdTypes = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_StaticNodeIdTypes, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_StaticNumericNodeIdRange = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_StaticNumericNodeIdRange, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_StaticStringNodeIdPattern = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_StaticStringNodeIdPattern, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Size = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Size, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Writable = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Writable, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_UserWritable = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_UserWritable, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_OpenCount = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_OpenCount, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Open_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Close_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Close_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Read_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_Write_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_Write_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_GetPosition_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_NamespaceFile_SetPosition_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_DefaultRolePermissions Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_DefaultRolePermissions = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_DefaultRolePermissions, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_DefaultUserRolePermissions Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_DefaultUserRolePermissions = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_DefaultUserRolePermissions, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the OPCUAConneXtNamespaceMetadata_DefaultAccessRestrictions Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCUAConneXtNamespaceMetadata_DefaultAccessRestrictions = new ExpandedNodeId(Opc.Ua.Ff.Variables.OPCUAConneXtNamespaceMetadata_DefaultAccessRestrictions, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlConfigurationType_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlConfigurationType_CPIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlConfigurationType_CPIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlResourceType_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlResourceType_CPIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlResourceType_CPIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramOrganizationUnitType_Body Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramOrganizationUnitType_Body = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramOrganizationUnitType_Body, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlProgramType_Program Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlProgramType_Program = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlProgramType_Program, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlFunctionBlockType_FunctionBlock Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlFunctionBlockType_FunctionBlock = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlFunctionBlockType_FunctionBlock, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlTaskType_Priority Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlTaskType_Priority = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlTaskType_Priority, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlTaskType_Interval Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlTaskType_Interval = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlTaskType_Interval, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the CtrlTaskType_Single Variable.
        /// </summary>
        public static readonly ExpandedNodeId CtrlTaskType_Single = new ExpandedNodeId(Opc.Ua.Ff.Variables.CtrlTaskType_Single, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.HC10_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.GP8_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_SafetyStatesIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_SafetyStatesIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_SafetyStatesIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_SafetyStatesIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_SafetyStatesIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_SafetyStatesIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.YRC1000mini_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_CPIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_CPIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_ParameterSet_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_ParameterSet_Temperature = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_ParameterSet_Temperature, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the SINAMICS_G120C_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId SINAMICS_G120C_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.SINAMICS_G120C_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_HardwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_HardwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_DeviceRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_DeviceRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_DeviceManual Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_DeviceManual = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_DeviceManual, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_RevisionCounter Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_RevisionCounter = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_RevisionCounter, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the USC_PLC_CPIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId USC_PLC_CPIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.USC_PLC_CPIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_MotionDevices_MotionDevice_R01_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R01_Controllers_Controller_R01_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R01_Controllers_Controller_R01_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R01_Controllers_Controller_R01_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_MotionDevices_MotionDevice_R02_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R02_Controllers_Controller_R02_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R02_Controllers_Controller_R02_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R02_Controllers_Controller_R02_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_MotionDevices_MotionDevice_R03_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R03_Controllers_Controller_R03_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R03_Controllers_Controller_R03_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R03_Controllers_Controller_R03_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_MotionDevices_MotionDevice_R04_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R04_Controllers_Controller_R04_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R04_Controllers_Controller_R04_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R04_Controllers_Controller_R04_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_MotionDevices_MotionDevice_R05_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the R05_Controllers_Controller_R05_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId R05_Controllers_Controller_R05_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.R05_Controllers_Controller_R05_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_MotionDeviceIdentifier_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_CurrentUser_Level Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_CurrentUser_Level = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_CurrentUser_Level, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Components_ComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_Software_SoftwareIdentifier_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ComponentName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramName, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_TaskControls_TaskControlIdentifier_ParameterSet_TaskProgramLoaded, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_ParameterSet_TotalEnergyConsumption_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_ParameterSet_CabinetFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_ParameterSet_CPUFanSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_ParameterSet_InputVoltage_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_ControllerIdentifier_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_EmergencyStopFunctions_EmergencyStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Name, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Enabled, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_ProtectiveStopFunctions_ProtectiveStopFunctionIdentifier_Active, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_OperationalMode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_EmergencyStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_SafetyStates_SafetyStateIdentifier_ParameterSet_ProtectiveStop, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_1_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_2_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_3_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_MotionDeviceCategory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_MotionDeviceCategory = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_MotionDeviceCategory, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_ParameterSet_SpeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_ParameterSet_SpeedOverride = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_ParameterSet_SpeedOverride, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_MotionProfile Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_MotionProfile = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_MotionProfile, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_AdditionalLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualPosition_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualSpeed_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_Axes_AxisIdentifier_ParameterSet_ActualAcceleration_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_PowerTrains_PowerTrainIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Mass_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_CartesianCoordinates_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_A Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_A = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_A, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_B Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_B = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_B, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_C Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_C = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_CenterOfMass_Orientation_C, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_X Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_X = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_X, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Y Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Y = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Y, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Z Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Z = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_FlangeLoad_Inertia_Z, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_MotionDevices_Conveyor_4_AdditionalComponents_AdditionalComponentIdentifier_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_HardwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_HardwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_DeviceRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_DeviceRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_DeviceManual Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_DeviceManual = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_DeviceManual, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_RevisionCounter Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_RevisionCounter = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_RevisionCounter, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ParameterSet_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_ParameterSet_Temperature = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_ParameterSet_Temperature, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_1_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_1_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_1_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_HardwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_HardwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_DeviceRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_DeviceRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_DeviceManual Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_DeviceManual = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_DeviceManual, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_RevisionCounter Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_RevisionCounter = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_RevisionCounter, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ParameterSet_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_ParameterSet_Temperature = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_ParameterSet_Temperature, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_2_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_2_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_2_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_HardwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_HardwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_DeviceRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_DeviceRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_DeviceManual Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_DeviceManual = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_DeviceManual, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_RevisionCounter Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_RevisionCounter = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_RevisionCounter, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ParameterSet_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_ParameterSet_Temperature = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_ParameterSet_Temperature, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_3_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_3_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_3_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_Locked Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_Locked = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_Locked, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_LockingClient Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_LockingClient = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_LockingClient, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_LockingUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_LockingUser = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_LockingUser, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_RemainingLockTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_RemainingLockTime = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_RemainingLockTime, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_InitLock_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_InitLock_InputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_InitLock_InputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_InitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_InitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_InitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_RenewLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_RenewLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_RenewLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_ExitLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_ExitLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_ExitLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Lock_BreakLock_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Lock_BreakLock_OutputArguments = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Lock_BreakLock_OutputArguments, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Manufacturer = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Manufacturer, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_Model = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_Model, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_HardwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_HardwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_HardwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_SoftwareRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_SoftwareRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_DeviceRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_DeviceRevision = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_DeviceRevision, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ProductCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_ProductCode = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_ProductCode, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_DeviceManual Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_DeviceManual = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_DeviceManual, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_SerialNumber = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_SerialNumber, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_RevisionCounter Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_RevisionCounter = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_RevisionCounter, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ParameterSet_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_ParameterSet_Temperature = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_ParameterSet_Temperature, Opc.Ua.Ff.Namespaces.FutureFactories);

        /// <summary>
        /// The identifier for the Conveyors_Controllers_VFD_4_ParameterSet_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Conveyors_Controllers_VFD_4_ParameterSet_Temperature_EngineeringUnits = new ExpandedNodeId(Opc.Ua.Ff.Variables.Conveyors_Controllers_VFD_4_ParameterSet_Temperature_EngineeringUnits, Opc.Ua.Ff.Namespaces.FutureFactories);
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model Design.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the AccessVars component.
        /// </summary>
        public const string AccessVars = "AccessVars";

        /// <summary>
        /// The BrowseName for the Body component.
        /// </summary>
        public const string Body = "Body";

        /// <summary>
        /// The BrowseName for the Configuration component.
        /// </summary>
        public const string Configuration = "Configuration";

        /// <summary>
        /// The BrowseName for the ConfigVars component.
        /// </summary>
        public const string ConfigVars = "ConfigVars";

        /// <summary>
        /// The BrowseName for the Conveyors component.
        /// </summary>
        public const string Conveyors = "Conveyors";

        /// <summary>
        /// The BrowseName for the CtrlConfigurationType component.
        /// </summary>
        public const string CtrlConfigurationType = "CtrlConfigurationType";

        /// <summary>
        /// The BrowseName for the CtrlFunctionBlockType component.
        /// </summary>
        public const string CtrlFunctionBlockType = "CtrlFunctionBlockType";

        /// <summary>
        /// The BrowseName for the CtrlProgramOrganizationUnitType component.
        /// </summary>
        public const string CtrlProgramOrganizationUnitType = "CtrlProgramOrganizationUnitType";

        /// <summary>
        /// The BrowseName for the CtrlProgramType component.
        /// </summary>
        public const string CtrlProgramType = "CtrlProgramType";

        /// <summary>
        /// The BrowseName for the CtrlResourceType component.
        /// </summary>
        public const string CtrlResourceType = "CtrlResourceType";

        /// <summary>
        /// The BrowseName for the CtrlTaskType component.
        /// </summary>
        public const string CtrlTaskType = "CtrlTaskType";

        /// <summary>
        /// The BrowseName for the Diagnostic component.
        /// </summary>
        public const string Diagnostic = "Diagnostic";

        /// <summary>
        /// The BrowseName for the FunctionBlock component.
        /// </summary>
        public const string FunctionBlock = "FunctionBlock";

        /// <summary>
        /// The BrowseName for the GlobalVars component.
        /// </summary>
        public const string GlobalVars = "GlobalVars";

        /// <summary>
        /// The BrowseName for the GP8 component.
        /// </summary>
        public const string GP8 = "<GP8>";

        /// <summary>
        /// The BrowseName for the HasExternalVars component.
        /// </summary>
        public const string HasExternalVars = "HasExternalVars";

        /// <summary>
        /// The BrowseName for the HasInOutVars component.
        /// </summary>
        public const string HasInOutVars = "HasInOutVars";

        /// <summary>
        /// The BrowseName for the HasInputVars component.
        /// </summary>
        public const string HasInputVars = "HasInputVars";

        /// <summary>
        /// The BrowseName for the HasLocalVars component.
        /// </summary>
        public const string HasLocalVars = "HasLocalVars";

        /// <summary>
        /// The BrowseName for the HasOutputVars component.
        /// </summary>
        public const string HasOutputVars = "HasOutputVars";

        /// <summary>
        /// The BrowseName for the HC10 component.
        /// </summary>
        public const string HC10 = "<HC10>";

        /// <summary>
        /// The BrowseName for the Interval component.
        /// </summary>
        public const string Interval = "Interval";

        /// <summary>
        /// The BrowseName for the MethodSet component.
        /// </summary>
        public const string MethodSet = "MethodSet";

        /// <summary>
        /// The BrowseName for the OPCUAConneXtNamespaceMetadata component.
        /// </summary>
        public const string OPCUAConneXtNamespaceMetadata = "https://nextusc.com/UA/FF/";

        /// <summary>
        /// The BrowseName for the Priority component.
        /// </summary>
        public const string Priority = "Priority";

        /// <summary>
        /// The BrowseName for the Program component.
        /// </summary>
        public const string Program = "Program";

        /// <summary>
        /// The BrowseName for the Programs component.
        /// </summary>
        public const string Programs = "Programs";

        /// <summary>
        /// The BrowseName for the R01 component.
        /// </summary>
        public const string R01 = "R01";

        /// <summary>
        /// The BrowseName for the R02 component.
        /// </summary>
        public const string R02 = "R02";

        /// <summary>
        /// The BrowseName for the R03 component.
        /// </summary>
        public const string R03 = "R03";

        /// <summary>
        /// The BrowseName for the R04 component.
        /// </summary>
        public const string R04 = "R04";

        /// <summary>
        /// The BrowseName for the R05 component.
        /// </summary>
        public const string R05 = "R05";

        /// <summary>
        /// The BrowseName for the Resources component.
        /// </summary>
        public const string Resources = "Resources";

        /// <summary>
        /// The BrowseName for the SFCType component.
        /// </summary>
        public const string SFCType = "SFCType";

        /// <summary>
        /// The BrowseName for the SINAMICS_G120C component.
        /// </summary>
        public const string SINAMICS_G120C = "<SINAMICS_G120C>";

        /// <summary>
        /// The BrowseName for the Single component.
        /// </summary>
        public const string Single = "Single";

        /// <summary>
        /// The BrowseName for the Tasks component.
        /// </summary>
        public const string Tasks = "Tasks";

        /// <summary>
        /// The BrowseName for the USC_PLC component.
        /// </summary>
        public const string USC_PLC = "<USC_PLC>";

        /// <summary>
        /// The BrowseName for the With component.
        /// </summary>
        public const string With = "With";

        /// <summary>
        /// The BrowseName for the YRC1000 component.
        /// </summary>
        public const string YRC1000 = "<YRC1000>";

        /// <summary>
        /// The BrowseName for the YRC1000mini component.
        /// </summary>
        public const string YRC1000mini = "<YRC1000mini>";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the model design.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the OpcUaDi namespace (.NET code namespace is 'Opc.Ua.Di').
        /// </summary>
        public const string OpcUaDi = "http://opcfoundation.org/UA/DI/";

        /// <summary>
        /// The URI for the OpcUaDiXsd namespace (.NET code namespace is 'Opc.Ua.Di').
        /// </summary>
        public const string OpcUaDiXsd = "http://opcfoundation.org/UA/DI/Types.xsd";

        /// <summary>
        /// The URI for the OpcUaRobotics namespace (.NET code namespace is 'Opc.Ua.Robotics').
        /// </summary>
        public const string OpcUaRobotics = "http://opcfoundation.org/UA/Robotics/";

        /// <summary>
        /// The URI for the OpcUaRoboticsXsd namespace (.NET code namespace is 'Opc.Ua.Robotics').
        /// </summary>
        public const string OpcUaRoboticsXsd = "http://opcfoundation.org/UA/Robotics/Types.xsd";

        /// <summary>
        /// The URI for the FutureFactories namespace (.NET code namespace is 'Opc.Ua.Ff').
        /// </summary>
        public const string FutureFactories = "https://nextusc.com/UA/FF/";

        /// <summary>
        /// The URI for the FutureFactoriesXsd namespace (.NET code namespace is 'Opc.Ua.Ff').
        /// </summary>
        public const string FutureFactoriesXsd = "https://nextusc.com/UA/FF/Types.xsd";
    }
    #endregion
}